
###############################################################
 General Information 
###############################################################

Formulation: DASKIN, loglevel: 1 , ratio: 0, 
timeout: 7200.0, threads: 1 

Problem parameters: 
 n = 20 
 p = 10 

Instance values: 
20×20 Named Array{Int64,2}
A ╲ B │   1    2    3    4    5    6    7  …   14   15   16   17   18   19   20
──────┼────────────────────────────────────────────────────────────────────────
1     │   0   64   22   38   62   82   42  …   56   40   20    6   72   74   66
2     │  28    0   35   83   80   12   56      15   66   47   60   20   95    1
3     │  90   26    0   41   29   84   43      69   99   32   17   17   56    7
4     │   1   72   72    0   14   67   96      74   42   98   84   56   81   85
5     │  91    0   97   67    0   24   38      57   54   13   20   89   57   72
6     │  81   68   55   49   53    0    3      29   89   29    1   12   12    9
7     │  97   65   26   18   42   93    0      38   22   52   29   33   86   53
8     │  32    0   83   67   99   86   24      47   92   95  100   92   77   77
9     │  89   67   27    1   45   24   23      55   24   57   59   48   69   57
⋮         ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮  ⋱    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮
12    │  87   87   58   68   72   60    9      61   22   87   10   25   98   62
13    │  96   46   10    6   34   57   24      45   26   53   97    9   29   76
14    │  63   90   45   12    5   27   37       0   41   32   70    0   44   13
15    │  65   27   67   93   58   26   34       1    0   98   90   44   82   47
16    │  31   93   76   94   74   42    7      15   17    0   18   68   91   81
17    │  35    6    1   17   60   81   82      55   91   29    0   59   69   50
18    │ 100   42   50   22   14   35   45      28   55   65  100    0   75   56
19    │  13   60   92   83   99   68   17      91   17    8   98   26    0   32
20    │  94   71   10   91   45   60   25  …   24   89   35   71   30   22    0
Cgl0004I processed model has 441 rows, 421 columns (420 integer (420 of which binary)) and 1617 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 66 integers unsatisfied sum - 14.0239
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 71 iterations 81
Cbc0038I Solution found of 71
Cbc0038I Relaxing continuous gives 71
Cbc0038I Before mini branch and bound, 351 integers at bound fixed and 0 continuous
Cbc0038I Full problem 441 rows 421 columns, reduced to 81 rows 59 columns
Cbc0038I Mini branch and bound improved solution from 71 to 7 (0.04 seconds)
Cbc0038I Round again with cutoff of 5.6241
Cbc0038I Reduced cost fixing fixed 84 variables on major pass 2
Cbc0038I Pass   2: suminf.    3.85773 (18) obj. 5.6241 iterations 22
Cbc0038I Pass   3: suminf.    3.58030 (17) obj. 5.6241 iterations 2
Cbc0038I Pass   4: suminf.    3.95524 (15) obj. 5.6241 iterations 13
Cbc0038I Pass   5: suminf.    3.95524 (15) obj. 5.6241 iterations 0
Cbc0038I Pass   6: suminf.    3.85773 (18) obj. 5.6241 iterations 20
Cbc0038I Pass   7: suminf.   10.14950 (51) obj. 5.6241 iterations 60
Cbc0038I Pass   8: suminf.    4.75964 (24) obj. 5.6241 iterations 57
Cbc0038I Pass   9: suminf.    4.75964 (24) obj. 5.6241 iterations 0
Cbc0038I Pass  10: suminf.    4.30362 (16) obj. 5.6241 iterations 23
Cbc0038I Pass  11: suminf.    3.30821 (12) obj. 5.6241 iterations 7
Cbc0038I Pass  12: suminf.    5.25060 (17) obj. 5.6241 iterations 16
Cbc0038I Pass  13: suminf.    4.79583 (17) obj. 5.6241 iterations 5
Cbc0038I Pass  14: suminf.    3.42994 (13) obj. 5.6241 iterations 7
Cbc0038I Pass  15: suminf.    3.36225 (12) obj. 5.6241 iterations 6
Cbc0038I Pass  16: suminf.    3.36225 (12) obj. 5.6241 iterations 1
Cbc0038I Pass  17: suminf.    8.88084 (36) obj. 5.6241 iterations 47
Cbc0038I Pass  18: suminf.    4.51911 (16) obj. 5.6241 iterations 34
Cbc0038I Pass  19: suminf.   10.49905 (47) obj. 5.6241 iterations 47
Cbc0038I Pass  20: suminf.    4.51911 (16) obj. 5.6241 iterations 49
Cbc0038I Pass  21: suminf.   11.56780 (53) obj. 5.6241 iterations 47
Cbc0038I Pass  22: suminf.    3.78307 (15) obj. 5.6241 iterations 34
Cbc0038I Pass  23: suminf.    2.50904 (11) obj. 5.6241 iterations 5
Cbc0038I Pass  24: suminf.    3.60852 (17) obj. 5.6241 iterations 32
Cbc0038I Pass  25: suminf.    3.42994 (16) obj. 5.6241 iterations 12
Cbc0038I Pass  26: suminf.    4.96164 (16) obj. 5.6241 iterations 12
Cbc0038I Pass  27: suminf.    4.11165 (16) obj. 5.6241 iterations 13
Cbc0038I Pass  28: suminf.    5.25060 (17) obj. 5.6241 iterations 13
Cbc0038I Pass  29: suminf.    3.60852 (17) obj. 5.6241 iterations 9
Cbc0038I Pass  30: suminf.    3.42994 (16) obj. 5.6241 iterations 12
Cbc0038I Pass  31: suminf.    6.90974 (18) obj. 5.6241 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 289 integers at bound fixed and 0 continuous
Cbc0038I Full problem 441 rows 421 columns, reduced to 152 rows 132 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of 7 - took 0.07 seconds
Cbc0012I Integer solution of 7 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 441 rows 421 columns, reduced to 76 rows 54 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 2.2401089 to 18 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 127 row cuts average 3.9 elements, 12 column cuts (12 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 
###############################################################
 Daskin 
###############################################################

X 
20×20 Named Array{Float64,2}
A ╲ B │   1    2    3    4    5    6    7  …   14   15   16   17   18   19   20
──────┼────────────────────────────────────────────────────────────────────────
1     │ 1.0  0.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  0.0  0.0
2     │ 0.0  1.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
3     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  1.0
4     │ 1.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
5     │ 0.0  1.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
6     │ 0.0  0.0  0.0  0.0  0.0  0.0  1.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
7     │ 0.0  0.0  0.0  0.0  0.0  0.0  1.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
8     │ 0.0  1.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
9     │ 0.0  0.0  0.0  1.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
⋮         ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮  ⋱    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮
12    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
13    │ 0.0  0.0  0.0  1.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
14    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  1.0  0.0  0.0
15    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
16    │ 0.0  0.0  0.0  0.0  0.0  0.0  1.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
17    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  1.0  0.0  0.0  0.0
18    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  1.0  0.0  0.0
19    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
20    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  0.0  1.0

Y 
20-element Named Array{Float64,1}
A  │ 
───┼────
1  │ 1.0
2  │ 1.0
3  │ 0.0
4  │ 1.0
5  │ 0.0
6  │ 0.0
7  │ 1.0
8  │ 0.0
9  │ 0.0
⋮      ⋮
12 │ 1.0
13 │ 0.0
14 │ 0.0
15 │ 0.0
16 │ 0.0
17 │ 1.0
18 │ 1.0
19 │ 0.0
20 │ 1.0

Optimal !
Objective function value is 7.0
Selected nodes: 1, 2, 4, 7, 10, 11, 12, 17, 18, 20

0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0030I Thread 0 used 0 times,  waiting to start 2.3841858e-07, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 6.6757202e-06 locked, 2.6226044e-06 waiting for locks
Cbc0001I Search completed - best objective 7, took 7 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 81 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.10

