
###############################################################
 General Information 
###############################################################

Formulation: ELLOUMI, loglevel: 1 , ratio: 0, 
timeout: 7200.0, threads: 1 

Problem parameters: 
 n = 100 
 p = 5 

Instance values: 
100×100 Named Array{Int64,2}
A ╲ B │   1    2    3    4    5    6    7  …   94   95   96   97   98   99  100
──────┼────────────────────────────────────────────────────────────────────────
1     │   0   30   76   77  105  136  113  …  102   31   82  157  108   77   88
2     │  30    0   46   47   75  106   83     132   61  112  183  126   95  118
3     │  76   46    0    1   29   60   37     138  107  116  137   80   49   98
4     │  77   47    1    0   28   59   36     137  108  115  138   81   50   99
5     │ 105   75   29   28    0   31    8     155  136   87  162  109   78  127
6     │ 136  106   60   59   31    0   39     186  167  118  193  140  109  158
7     │ 113   83   37   36    8   39    0     147  141   95  169  112   81  130
8     │ 119  122   76   75   47   78   39     186  127  134  130   73   42   91
9     │ 105  123   77   78   61   92   53     200  136  148  116   59   28   77
⋮         ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮  ⋱    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮
92    │ 192  162  116  115   87  118   79     129  162  174  248  191  160  209
93    │ 168  157  111  110   82  113   74      75  137  169  243  186  155  204
94    │ 102  132  138  137  155  186  147       0   71  122  181  208  177  190
95    │  31   61  107  108  136  167  141      71    0   51  126  139  108  119
96    │  82  112  116  115   87  118   95     122   51    0   75  132  159  170
97    │ 157  183  137  138  162  193  169     181  126   75    0   57   88  137
98    │ 108  126   80   81  109  140  112     208  139  132   57    0   31   80
99    │  77   95   49   50   78  109   81     177  108  159   88   31    0   49
100   │  88  118   98   99  127  158  130  …  190  119  170  137   80   49    0

D = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 278, 280, 281, 282, 283, 285, 288, 290, 292, 298, 299]
k = 285
Cgl0003I 59 fixed, 0 tightened bounds, 5809 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2555 strengthened rows, 0 substitutions
Cgl0004I processed model has 17126 rows, 325 columns (325 integer (325 of which binary)) and 922770 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 143 integers unsatisfied sum - 20.8538
Cbc0038I Pass   1: (19.42 seconds) suminf.    8.32673 (45) obj. 115.436 iterations 402
Cbc0038I Pass   2: (19.60 seconds) suminf.    8.06542 (48) obj. 115.607 iterations 37
Cbc0038I Pass   3: (19.90 seconds) suminf.    5.96875 (36) obj. 119.594 iterations 100
Cbc0038I Pass   4: (20.09 seconds) suminf.    5.03030 (33) obj. 118.97 iterations 62
Cbc0038I Pass   5: (20.28 seconds) suminf.    4.11111 (33) obj. 119.127 iterations 51
Cbc0038I Pass   6: (20.44 seconds) suminf.    3.93793 (30) obj. 119.248 iterations 31
Cbc0038I Pass   7: (21.14 seconds) suminf.    0.00000 (0) obj. 129 iterations 270
Cbc0038I Solution found of 129
Cbc0038I Before mini branch and bound, 180 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17126 rows 325 columns, reduced to 9876 rows 145 columns - 17 fixed gives 2650, 128 - ok now
Cbc0038I Full problem 17126 rows 325 columns, reduced to 2650 rows 128 columns
Cbc0038I Mini branch and bound did not improve solution (30.32 seconds)
Cbc0038I Round again with cutoff of 125.915
Cbc0038I Pass   8: (30.50 seconds) suminf.    8.32673 (45) obj. 115.436 iterations 0
Cbc0038I Pass   9: (30.68 seconds) suminf.    8.06542 (48) obj. 115.607 iterations 43
Cbc0038I Pass  10: (30.99 seconds) suminf.    5.60000 (23) obj. 120.4 iterations 113
Cbc0038I Pass  11: (31.18 seconds) suminf.    5.33333 (23) obj. 120.333 iterations 64
Cbc0038I Pass  12: (31.35 seconds) suminf.    5.00000 (32) obj. 120.379 iterations 37
Cbc0038I Pass  13: (31.54 seconds) suminf.    4.42857 (28) obj. 120.143 iterations 59
Cbc0038I Pass  14: (31.71 seconds) suminf.    4.25000 (24) obj. 120.25 iterations 35
Cbc0038I Pass  15: (31.92 seconds) suminf.    3.71134 (36) obj. 119.887 iterations 50
Cbc0038I Pass  16: (32.09 seconds) suminf.    3.66154 (29) obj. 120.077 iterations 40
Cbc0038I Pass  17: (32.48 seconds) suminf.    4.44444 (22) obj. 124.556 iterations 126
Cbc0038I Pass  18: (32.69 seconds) suminf.    3.35000 (20) obj. 124.45 iterations 56
Cbc0038I Pass  19: (32.89 seconds) suminf.    4.27778 (16) obj. 125.722 iterations 66
Cbc0038I Pass  20: (36.69 seconds) suminf.    3.50000 (14) obj. 125.5 iterations 46
Cbc0038I Pass  21: (36.87 seconds) suminf.    3.40476 (21) obj. 125.214 iterations 38
Cbc0038I Pass  22: (37.10 seconds) suminf.    5.08536 (17) obj. 125.915 iterations 90
Cbc0038I Pass  23: (37.88 seconds) suminf.    3.28536 (11) obj. 125.915 iterations 195
Cbc0038I Pass  24: (38.11 seconds) suminf.    2.75202 (9) obj. 125.915 iterations 51
Cbc0038I Pass  25: (38.47 seconds) suminf.    1.87471 (17) obj. 125.915 iterations 140
Cbc0038I Pass  26: (39.07 seconds) suminf.    1.46670 (75) obj. 125.915 iterations 189
Cbc0038I Pass  27: (39.78 seconds) suminf.    4.60000 (28) obj. 117.8 iterations 243
Cbc0038I Pass  28: (39.96 seconds) suminf.    4.47845 (37) obj. 118.073 iterations 42
Cbc0038I Pass  29: (40.57 seconds) suminf.    4.65679 (26) obj. 125.915 iterations 240
Cbc0038I Pass  30: (40.76 seconds) suminf.    4.10576 (23) obj. 125.915 iterations 57
Cbc0038I Pass  31: (41.70 seconds) suminf.    3.75202 (12) obj. 125.915 iterations 63
Cbc0038I Pass  32: (42.70 seconds) suminf.    4.00000 (12) obj. 125.667 iterations 88
Cbc0038I Pass  33: (43.73 seconds) suminf.    3.75202 (12) obj. 125.915 iterations 86
Cbc0038I Pass  34: (44.55 seconds) suminf.   13.93679 (81) obj. 125.915 iterations 258
Cbc0038I Pass  35: (45.41 seconds) suminf.    9.01665 (56) obj. 125.915 iterations 240
Cbc0038I Pass  36: (45.78 seconds) suminf.    6.08536 (35) obj. 125.915 iterations 95
Cbc0038I Pass  37: (45.96 seconds) suminf.    4.71736 (38) obj. 125.915 iterations 40
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 164 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17126 rows 325 columns, reduced to 10657 rows 161 columns - 24 fixed gives 2533, 131 - ok now
Cbc0038I Full problem 17126 rows 325 columns, reduced to 2533 rows 131 columns
Cbc0038I Mini branch and bound did not improve solution (56.86 seconds)
Cbc0038I After 56.86 seconds - Feasibility pump exiting with objective of 129 - took 38.86 seconds
Cbc0012I Integer solution of 129 found by feasibility pump after 0 iterations and 0 nodes (56.89 seconds)
Cbc0038I Full problem 17126 rows 325 columns, reduced to 9831 rows 143 columns - 74 fixed gives 0, 0 - ok now
Cbc0031I 16 added rows had average density of 174.8125
Cbc0013I At root node, 16 cuts changed objective from 107.14553 to 108.55437 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 7.723 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2439 row cuts average 177.6 elements, 0 column cuts (0 active)  in 11.939 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.590 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.213 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 44.545 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.868 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 632 row cuts average 157.2 elements, 0 column cuts (0 active)  in 4.039 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 129 best solution, best possible 108.55437 (335.35 seconds)
Cbc0012I Integer solution of 127 found by DiveCoefficient after 32259 iterations and 3 nodes (402.39 seconds)
Cbc0012I Integer solution of 127 found by heuristic after 32241 iterations and 2 nodes (428.00 seconds)
Cbc0010I After 1000 nodes, 31 on tree, 127 best solution, best possible 108.55437 (1748.72 seconds)

###############################################################
 Elloumi 
###############################################################

Y 
100-element Named Array{Float64,1}
A   │ 
────┼────
1   │ 0.0
2   │ 0.0
3   │ 0.0
4   │ 0.0
5   │ 0.0
6   │ 0.0
7   │ 0.0
8   │ 0.0
9   │ 0.0
⋮       ⋮
92  │ 0.0
93  │ 0.0
94  │ 0.0
95  │ 0.0
96  │ 0.0
97  │ 0.0
98  │ 0.0
99  │ 1.0
100 │ 0.0

uk: 1 dimensions:
[  2] = 1.0
[  3] = 1.0
[  4] = 1.0
[  5] = 1.0
[  6] = 1.0
[  7] = 1.0
[  8] = 1.0
[  9] = 1.0
[ 10] = 1.0
[ 11] = 1.0
[ 12] = 1.0
[ 13] = 1.0
[ 14] = 1.0
[ 15] = 1.0
[ 16] = 1.0
[ 17] = 1.0
[ 18] = 1.0
[ 19] = 1.0
[ 20] = 1.0
[ 21] = 1.0
[ 22] = 1.0
[ 23] = 1.0
[ 24] = 1.0
[ 25] = 1.0
[ 26] = 1.0
[ 27] = 1.0
[ 28] = 1.0
[ 29] = 1.0
[ 30] = 1.0
[ 31] = 1.0
[ 32] = 1.0
[ 33] = 1.0
[ 34] = 1.0
[ 35] = 1.0
[ 36] = 1.0
[ 37] = 1.0
[ 38] = 1.0
[ 39] = 1.0
[ 40] = 1.0
[ 41] = 1.0
[ 42] = 1.0
[ 43] = 1.0
[ 44] = 1.0
[ 45] = 1.0
[ 46] = 1.0
[ 47] = 1.0
[ 48] = 1.0
[ 49] = 1.0
[ 50] = 1.0
[ 51] = 1.0
[ 52] = 1.0
[ 53] = 1.0
[ 54] = 1.0
[ 55] = 1.0
[ 56] = 1.0
[ 57] = 1.0
[ 58] = 1.0
[ 59] = 1.0
[ 60] = 1.0
[ 61] = 1.0
[ 62] = 1.0
[ 63] = 1.0
[ 64] = 1.0
[ 65] = 1.0
[ 66] = 1.0
[ 67] = 1.0
[ 68] = 1.0
[ 69] = 1.0
[ 70] = 1.0
[ 71] = 1.0
[ 72] = 1.0
[ 73] = 1.0
[ 74] = 1.0
[ 75] = 1.0
[ 76] = 1.0
[ 77] = 1.0
[ 78] = 1.0
[ 79] = 1.0
[ 80] = 1.0
[ 81] = 1.0
[ 82] = 1.0
[ 83] = 1.0
[ 84] = 1.0
[ 85] = 1.0
[ 86] = 1.0
[ 87] = 1.0
[ 88] = 1.0
[ 89] = 1.0
[ 90] = 1.0
[ 91] = 1.0
[ 92] = 1.0
[ 93] = 1.0
[ 94] = 1.0
[ 95] = 1.0
[ 96] = 1.0
[ 97] = 1.0
[ 98] = 1.0
[ 99] = 1.0
[100] = 1.0
[101] = 1.0
[102] = 1.0
[103] = 1.0
[104] = 1.0
[105] = 1.0
[106] = 1.0
[107] = 1.0
[108] = 1.0
[109] = 1.0
[110] = 1.0
[111] = 1.0
[112] = 1.0
[113] = 1.0
[114] = 1.0
[115] = 1.0
[116] = 1.0
[117] = 1.0
[118] = 1.0
[119] = 1.0
[120] = 1.0
[121] = 1.0
[122] = 1.0
[123] = 1.0
[124] = 1.0
[125] = 1.0
[126] = 1.0
[127] = 1.0
[128] = 0.0
[129] = 0.0
[130] = 0.0
[131] = 0.0
[132] = 0.0
[133] = 0.0
[134] = 0.0
[135] = 0.0
[136] = 0.0
[137] = 0.0
[138] = 0.0
[139] = 0.0
[140] = 0.0
[141] = 0.0
[142] = 0.0
[143] = 0.0
[144] = 0.0
[145] = 0.0
[146] = 0.0
[147] = 0.0
[148] = 0.0
[149] = 0.0
[150] = 0.0
[151] = 0.0
[152] = 0.0
[153] = 0.0
[154] = 0.0
[155] = 0.0
[156] = 0.0
[157] = 0.0
[158] = 0.0
[159] = 0.0
[160] = 0.0
[161] = 0.0
[162] = 0.0
[163] = 0.0
[164] = 0.0
[165] = 0.0
[166] = 0.0
[167] = 0.0
[168] = 0.0
[169] = 0.0
[170] = 0.0
[171] = 0.0
[172] = 0.0
[173] = 0.0
[174] = 0.0
[175] = 0.0
[176] = 0.0
[177] = 0.0
[178] = 0.0
[179] = 0.0
[180] = 0.0
[181] = 0.0
[182] = 0.0
[183] = 0.0
[184] = 0.0
[185] = 0.0
[186] = 0.0
[187] = 0.0
[188] = 0.0
[189] = 0.0
[190] = 0.0
[191] = 0.0
[192] = 0.0
[193] = 0.0
[194] = 0.0
[195] = 0.0
[196] = 0.0
[197] = 0.0
[198] = 0.0
[199] = 0.0
[200] = 0.0
[201] = 0.0
[202] = 0.0
[203] = 0.0
[204] = 0.0
[205] = 0.0
[206] = 0.0
[207] = 0.0
[208] = 0.0
[209] = 0.0
[210] = 0.0
[211] = 0.0
[212] = 0.0
[213] = 0.0
[214] = 0.0
[215] = 0.0
[216] = 0.0
[217] = 0.0
[218] = 0.0
[219] = 0.0
[220] = 0.0
[221] = 0.0
[222] = 0.0
[223] = 0.0
[224] = 0.0
[225] = 0.0
[226] = 0.0
[227] = 0.0
[228] = 0.0
[229] = 0.0
[230] = 0.0
[231] = 0.0
[232] = 0.0
[233] = 0.0
[234] = 0.0
[235] = 0.0
[236] = 0.0
[237] = 0.0
[238] = 0.0
[239] = 0.0
[240] = 0.0
[241] = 0.0
[242] = 0.0
[243] = 0.0
[244] = 0.0
[245] = 0.0
[246] = 0.0
[247] = 0.0
[248] = 0.0
[249] = 0.0
[250] = 0.0
[251] = 0.0
[252] = 0.0
[253] = 0.0
[254] = 0.0
[255] = 0.0
[256] = 0.0
[257] = 0.0
[258] = 0.0
[259] = 0.0
[260] = 0.0
[261] = 0.0
[262] = 0.0
[263] = 0.0
[264] = 0.0
[265] = 0.0
[266] = 0.0
[267] = 0.0
[268] = 0.0
[269] = 0.0
[270] = 0.0
[271] = 0.0
[272] = 0.0
[273] = 0.0
[274] = 0.0
[275] = 0.0
[276] = 0.0
[277] = 0.0
[278] = 0.0
[279] = 0.0
[280] = 0.0
[281] = 0.0
[282] = 0.0
[283] = 0.0
[284] = 0.0
[285] = 0.0

Optimal !
Objective function value is 127.0
Selected nodes: 35, 65, 78, 85, 99
Cbc0030I Thread 0 used 1298 times,  waiting to start 0.28434348, 1928.177 cpu time, 5902 locks, 0.1148169 locked, 0.0013833046 waiting for locks
Cbc0030I Main thread 1937.48 waiting for threads,  2603 locks, 0.0027663708 locked, 0.00013613701 waiting for locks
Cbc0001I Search completed - best objective 127, took 294562 iterations and 1298 nodes (2263.70 seconds)
Cbc0032I Strong branching done 3740 times (263079 iterations), fathomed 35 nodes and fixed 25 variables
Cbc0035I Maximum depth 45, 11000 variables fixed on reduced cost
Total time (CPU seconds):       2267.91   (Wallclock seconds):       2281.19

