
###############################################################
 General Information 
###############################################################

Formulation: ELLOUMI, loglevel: 1 , ratio: 0, 
timeout: 7200.0, threads: 1 

Problem parameters: 
 n = 20 
 p = 2 

Instance values: 
20×20 Named Array{Int64,2}
A ╲ B │   1    2    3    4    5    6    7  …   14   15   16   17   18   19   20
──────┼────────────────────────────────────────────────────────────────────────
1     │   0    8   65   96   72   86   18  …   64   26   68   38   67  100    3
2     │  22    0   77   76   70   21    2       8   39   19   23   91   17    1
3     │   4   86    0   38   83   73   65      56   50   35   91   19   32   25
4     │   2   73   81    0   15   31   33      10   70   88   65   68   85   21
5     │  87   55   13   55    0   35   99      78   92   79    3   27   24    4
6     │ 100   84   47   44   41    0   18      71    2   43    0   17   51   59
7     │   0    9   67    2   33   49    0       9  100   99   35   37   52   25
8     │  92   17   47   87   25   36   40      21    2   66   15   92    9   88
9     │  23   91   60   71   94   74   10       5   62   59   86   30   39   89
⋮         ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮  ⋱    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮
12    │  89   86   53   88   16   96   27      34   77   68   27   31   74   46
13    │   5   56   70   97   78   34   50      37   65   37   70   70   20   34
14    │  23    4   35   55   54   24   50       0   44   20   90   31   92   89
15    │  30   95   23   45   47   32   18      56    0   90   15   89    9   36
16    │  67    6   92   84   94   33   89      61   32    0   43   19   38   39
17    │  76   31   78   71   54   55   64       2    9   83    0   19   64   68
18    │  22   34   98   27   50   37   67      66   63    9   22    0   45    5
19    │  54   14    3   94   12    0   47      40   20   94   60   61    0   67
20    │  82   45   23   81   42   29   53  …    1   82   13   24   77   71    0

D = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]
k = 100
Cgl0003I 9 fixed, 0 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0004I processed model has 1709 rows, 110 columns (110 integer (110 of which binary)) and 20748 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 61 integers unsatisfied sum - 15.3162
Cbc0038I Pass   1: suminf.    9.65102 (42) obj. 33.3709 iterations 103
Cbc0038I Pass   2: suminf.    8.69231 (39) obj. 34.1154 iterations 12
Cbc0038I Pass   3: suminf.    2.44444 (12) obj. 47.4444 iterations 64
Cbc0038I Pass   4: suminf.    2.04687 (13) obj. 47.0469 iterations 34
Cbc0038I Pass   5: suminf.    2.00000 (11) obj. 48 iterations 18
Cbc0038I Pass   6: suminf.    1.95286 (12) obj. 48 iterations 7
Cbc0038I Pass   7: suminf.    2.00000 (8) obj. 48 iterations 11
Cbc0038I Pass   8: suminf.    4.06047 (30) obj. 56.9055 iterations 69
Cbc0038I Pass   9: suminf.    2.16667 (11) obj. 58.1667 iterations 45
Cbc0038I Pass  10: suminf.    2.00000 (8) obj. 59 iterations 17
Cbc0038I Pass  11: suminf.    1.95286 (12) obj. 59 iterations 13
Cbc0038I Pass  12: suminf.    2.00000 (9) obj. 59 iterations 6
Cbc0038I Pass  13: suminf.    6.24016 (29) obj. 67.8937 iterations 86
Cbc0038I Pass  14: suminf.    3.78233 (27) obj. 68.7823 iterations 38
Cbc0038I Pass  15: suminf.    2.00000 (8) obj. 74 iterations 32
Cbc0038I Pass  16: suminf.    1.82353 (12) obj. 74 iterations 9
Cbc0038I Pass  17: suminf.    1.72727 (8) obj. 74 iterations 12
Cbc0038I Pass  18: suminf.    1.50000 (6) obj. 74 iterations 13
Cbc0038I Pass  19: suminf.    1.66667 (5) obj. 74 iterations 20
Cbc0038I Pass  20: suminf.    3.93697 (24) obj. 74.542 iterations 75
Cbc0038I Pass  21: suminf.    3.63828 (24) obj. 74.6532 iterations 21
Cbc0038I Pass  22: suminf.    3.12184 (19) obj. 75.1218 iterations 9
Cbc0038I Pass  23: suminf.    1.66667 (5) obj. 78 iterations 38
Cbc0038I Pass  24: suminf.    1.50000 (6) obj. 78 iterations 18
Cbc0038I Pass  25: suminf.    1.66667 (5) obj. 78 iterations 20
Cbc0038I Pass  26: suminf.    3.34000 (20) obj. 75.62 iterations 64
Cbc0038I Pass  27: suminf.    2.64751 (17) obj. 75.6475 iterations 28
Cbc0038I Pass  28: suminf.    1.80000 (7) obj. 77 iterations 22
Cbc0038I Pass  29: suminf.    1.70000 (11) obj. 77.1 iterations 19
Cbc0038I Pass  30: suminf.    2.33333 (7) obj. 78.3333 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1709 rows 110 columns, reduced to 1554 rows 97 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.91 seconds)
Cbc0038I Full problem 1710 rows 110 columns, reduced to 1710 rows 110 columns - too large
Cbc0038I After 0.96 seconds - Feasibility pump exiting - took 0.85 seconds
Cbc0012I Integer solution of 56 found by DiveCoefficient after 0 iterations and 0 nodes (1.00 seconds)
Cbc0038I Full problem 1709 rows 110 columns, reduced to 1035 rows 63 columns - 17 fixed gives 304, 46 - ok now
Cbc0038I Full problem 1709 rows 110 columns, reduced to 302 rows 39 columns

###############################################################
 Elloumi 
###############################################################

Y 
20-element Named Array{Float64,1}
A  │ 
───┼────
1  │ 0.0
2  │ 0.0
3  │ 0.0
4  │ 0.0
5  │ 0.0
6  │ 0.0
7  │ 1.0
8  │ 0.0
9  │ 0.0
⋮      ⋮
12 │ 0.0
13 │ 0.0
14 │ 0.0
15 │ 0.0
16 │ 0.0
17 │ 0.0
18 │ 1.0
19 │ 0.0
20 │ 0.0

uk: 1 dimensions:
[  2] = 1.0
[  3] = 1.0
[  4] = 1.0
[  5] = 1.0
[  6] = 1.0
[  7] = 1.0
[  8] = 1.0
[  9] = 1.0
[ 10] = 1.0
[ 11] = 1.0
[ 12] = 1.0
[ 13] = 1.0
[ 14] = 1.0
[ 15] = 1.0
[ 16] = 1.0
[ 17] = 1.0
[ 18] = 1.0
[ 19] = 1.0
[ 20] = 1.0
[ 21] = 1.0
[ 22] = 1.0
[ 23] = 1.0
[ 24] = 1.0
[ 25] = 1.0
[ 26] = 1.0
[ 27] = 1.0
[ 28] = 1.0
[ 29] = 1.0
[ 30] = 1.0
[ 31] = 1.0
[ 32] = 1.0
[ 33] = 1.0
[ 34] = 1.0
[ 35] = 1.0
[ 36] = 1.0
[ 37] = 1.0
[ 38] = 1.0
[ 39] = 1.0
[ 40] = 1.0
[ 41] = 1.0
[ 42] = 1.0
[ 43] = 1.0
[ 44] = 1.0
[ 45] = 1.0
[ 46] = 1.0
[ 47] = 1.0
[ 48] = 1.0
[ 49] = 1.0
[ 50] = 1.0
[ 51] = 1.0
[ 52] = 1.0
[ 53] = 1.0
[ 54] = 0.0
[ 55] = 0.0
[ 56] = 0.0
[ 57] = 0.0
[ 58] = 0.0
[ 59] = 0.0
[ 60] = 0.0
[ 61] = 0.0
[ 62] = 0.0
[ 63] = 0.0
[ 64] = 0.0
[ 65] = 0.0
[ 66] = 0.0
[ 67] = 0.0
[ 68] = 0.0
[ 69] = 0.0
[ 70] = 0.0
[ 71] = 0.0
[ 72] = 0.0
[ 73] = 0.0
[ 74] = 0.0
[ 75] = 0.0
[ 76] = 0.0
[ 77] = 0.0
[ 78] = 0.0
[ 79] = 0.0
[ 80] = 0.0
[ 81] = 0.0
[ 82] = 0.0
[ 83] = 0.0
[ 84] = 0.0
[ 85] = 0.0
[ 86] = 0.0
[ 87] = 0.0
[ 88] = 0.0
[ 89] = 0.0
[ 90] = 0.0
[ 91] = 0.0
[ 92] = 0.0
[ 93] = 0.0
[ 94] = 0.0
[ 95] = 0.0
[ 96] = 0.0
[ 97] = 0.0
[ 98] = 0.0
[ 99] = 0.0
[100] = 0.0

Optimal !
Objective function value is 53.0
Selected nodes: 7, 18
Cbc0031I 17 added rows had average density of 67.117647
Cbc0013I At root node, 17 cuts changed objective from 29.287867 to 33.012781 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.248 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2234 row cuts average 70.0 elements, 0 column cuts (0 active)  in 0.357 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.761 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 216 row cuts average 52.4 elements, 0 column cuts (0 active)  in 0.264 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 56 best solution, best possible 33.012781 (9.72 seconds)
Cbc0004I Integer solution of 53 found after 17933 iterations and 34 nodes (19.34 seconds)
Cbc0012I Integer solution of 53 found by heuristic after 17905 iterations and 33 nodes (19.34 seconds)
Cbc0030I Thread 0 used 40 times,  waiting to start 8.1062317e-06, 10.118455 cpu time, 245 locks, 0.0056431293 locked, 8.1300735e-05 waiting for locks
Cbc0030I Main thread 10.251825 waiting for threads,  85 locks, 0.00011944771 locked, 8.5830688e-06 waiting for locks
Cbc0001I Search completed - best objective 53, took 19104 iterations and 40 nodes (19.85 seconds)
Cbc0032I Strong branching done 736 times (49722 iterations), fathomed 2 nodes and fixed 25 variables
Cbc0035I Maximum depth 19, 56 variables fixed on reduced cost
Total time (CPU seconds):       19.90   (Wallclock seconds):       20.07

