
###############################################################
 General Information 
###############################################################

Formulation: ELLOUMI, loglevel: 1 , ratio: 0, 
timeout: 7200.0, threads: 1 

Problem parameters: 
 n = 20 
 p = 4 

Instance values: 
20×20 Named Array{Int64,2}
A ╲ B │   1    2    3    4    5    6    7  …   14   15   16   17   18   19   20
──────┼────────────────────────────────────────────────────────────────────────
1     │   0   14   28   31   27   42   80  …   28    4   44   21   76   44   50
2     │  59    0   57   89   80   12   39      15    4   96   84   79   50   51
3     │  76   22    0   37   91    1   51      59   36    5   83   14   81   67
4     │  12   75  100    0   45    1   77       6   31   79   37   64    1    3
5     │  68   89    8   95    0   37   21      26   36   11   82   37   66    6
6     │  43   73   17   15   29    0   99      30   14   53    9   75   85   27
7     │  31   47   74   66    9   72    0      67   31   10   59   10   33   82
8     │  98   34  100   19   99   16   57      45   81  100   35   51   49   17
9     │  38   87   83   96   96   15   95      48   30   11   60   32   24   72
⋮         ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮  ⋱    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮
12    │  58   68   73   42   65   52   62      97   29   64   85   86   30   58
13    │  35   52    7   77   40   16   89      67   20    8    4  100   47   96
14    │  31   92    4   97   49   85   31       0   43   53   47   27   52   60
15    │  55   83    0   96   15   38   20      53    0   32   20   35   43   31
16    │  16   99   73   86  100   83   56       9   25    0   97   40   17   43
17    │   2   57    4    8   78   10   45      30   25   11    0   68   84   39
18    │  25   91   41   14   62   97   48      24   48   70   33    0   44   33
19    │  26   30   30   37   99   76   67      40   18   14    3   34    0   87
20    │  35   59   27    6   70   87   52  …   86   36   62   37   42   21    0

D = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100]
k = 98
Cgl0003I 9 fixed, 0 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 711 strengthened rows, 0 substitutions
Cgl0004I processed model has 1679 rows, 108 columns (108 integer (108 of which binary)) and 21856 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 32 integers unsatisfied sum - 7.07692
Cbc0038I Pass   1: suminf.    3.50000 (11) obj. 15.8333 iterations 54
Cbc0038I Pass   2: suminf.    2.83333 (9) obj. 16.5 iterations 19
Cbc0038I Pass   3: suminf.    2.50000 (8) obj. 17 iterations 9
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. 17 iterations 17
Cbc0038I Solution found of 17
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1679 rows 108 columns, reduced to 527 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I Round again with cutoff of 15.8155
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   5: suminf.    3.51786 (12) obj. 15.8155 iterations 14
Cbc0038I Pass   6: suminf.    2.69210 (13) obj. 15.8155 iterations 10
Cbc0038I Pass   7: suminf.    2.36905 (16) obj. 15.8155 iterations 5
Cbc0038I Pass   8: suminf.    5.13324 (32) obj. 15.8155 iterations 63
Cbc0038I Pass   9: suminf.    5.10453 (32) obj. 15.8155 iterations 7
Cbc0038I Pass  10: suminf.    6.15839 (22) obj. 15.8155 iterations 33
Cbc0038I Pass  11: suminf.    5.42857 (20) obj. 15.1429 iterations 36
Cbc0038I Pass  12: suminf.    3.51786 (12) obj. 15.8155 iterations 47
Cbc0038I Pass  13: suminf.    2.69210 (13) obj. 15.8155 iterations 11
Cbc0038I Pass  14: suminf.    2.36905 (16) obj. 15.8155 iterations 14
Cbc0038I Pass  15: suminf.    5.26533 (31) obj. 15.8155 iterations 42
Cbc0038I Pass  16: suminf.    5.10453 (32) obj. 15.8155 iterations 11
Cbc0038I Pass  17: suminf.    4.39484 (14) obj. 15.8155 iterations 48
Cbc0038I Pass  18: suminf.    2.69210 (13) obj. 15.8155 iterations 19
Cbc0038I Pass  19: suminf.    2.36905 (16) obj. 15.8155 iterations 9
Cbc0038I Pass  20: suminf.    8.17647 (32) obj. 14.5882 iterations 55
Cbc0038I Pass  21: suminf.    4.18453 (13) obj. 15.8155 iterations 76
Cbc0038I Pass  22: suminf.    2.36905 (16) obj. 15.8155 iterations 20
Cbc0038I Pass  23: suminf.    4.74008 (18) obj. 15.8155 iterations 25
Cbc0038I Pass  24: suminf.    2.36905 (16) obj. 15.8155 iterations 19
Cbc0038I Pass  25: suminf.    2.36905 (16) obj. 15.8155 iterations 2
Cbc0038I Pass  26: suminf.    8.17647 (32) obj. 14.5882 iterations 73
Cbc0038I Pass  27: suminf.    4.18453 (13) obj. 15.8155 iterations 65
Cbc0038I Pass  28: suminf.    2.36905 (16) obj. 15.8155 iterations 15
Cbc0038I Pass  29: suminf.    5.31547 (17) obj. 15.8155 iterations 28
Cbc0038I Pass  30: suminf.    2.36905 (16) obj. 15.8155 iterations 18
Cbc0038I Pass  31: suminf.    2.36905 (16) obj. 15.8155 iterations 1
Cbc0038I Pass  32: suminf.    8.17647 (32) obj. 14.5882 iterations 54
Cbc0038I Pass  33: suminf.    4.18453 (13) obj. 15.8155 iterations 65
Cbc0038I Pass  34: suminf.    2.36905 (16) obj. 15.8155 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1679 rows 108 columns, reduced to 624 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (1.72 seconds)
Cbc0038I After 1.72 seconds - Feasibility pump exiting with objective of 17 - took 1.61 seconds
Cbc0012I Integer solution of 17 found by feasibility pump after 0 iterations and 0 nodes (1.72 seconds)
Cbc0038I Full problem 1679 rows 108 columns, reduced to 516 rows 32 columns

###############################################################
 Elloumi 
###############################################################

Y 
20-element Named Array{Float64,1}
A  │ 
───┼────
1  │ 0.0
2  │ 0.0
3  │ 0.0
4  │ 0.0
5  │ 0.0
6  │ 0.0
7  │ 0.0
8  │ 0.0
9  │ 0.0
⋮      ⋮
12 │ 0.0
13 │ 1.0
14 │ 0.0
15 │ 0.0
16 │ 1.0
17 │ 0.0
18 │ 0.0
19 │ 0.0
20 │ 1.0

uk: 1 dimensions:
[ 2] = 1.0
[ 3] = 1.0
[ 4] = 1.0
[ 5] = 1.0
[ 6] = 1.0
[ 7] = 1.0
[ 8] = 1.0
[ 9] = 1.0
[10] = 1.0
[11] = 1.0
[12] = 1.0
[13] = 1.0
[14] = 1.0
[15] = 1.0
[16] = 1.0
[17] = 1.0
[18] = 1.0
[19] = 0.0
[20] = 0.0
[21] = 0.0
[22] = 0.0
[23] = 0.0
[24] = 0.0
[25] = 0.0
[26] = 0.0
[27] = 0.0
[28] = 0.0
[29] = 0.0
[30] = 0.0
[31] = 0.0
[32] = 0.0
[33] = 0.0
[34] = 0.0
[35] = 0.0
[36] = 0.0
[37] = 0.0
[38] = 0.0
[39] = 0.0
[40] = 0.0
[41] = 0.0
[42] = 0.0
[43] = 0.0
[44] = 0.0
[45] = 0.0
[46] = 0.0
[47] = 0.0
[48] = 0.0
[49] = 0.0
[50] = 0.0
[51] = 0.0
[52] = 0.0
[53] = 0.0
[54] = 0.0
[55] = 0.0
[56] = 0.0
[57] = 0.0
[58] = 0.0
[59] = 0.0
[60] = 0.0
[61] = 0.0
[62] = 0.0
[63] = 0.0
[64] = 0.0
[65] = 0.0
[66] = 0.0
[67] = 0.0
[68] = 0.0
[69] = 0.0
[70] = 0.0
[71] = 0.0
[72] = 0.0
[73] = 0.0
[74] = 0.0
[75] = 0.0
[76] = 0.0
[77] = 0.0
[78] = 0.0
[79] = 0.0
[80] = 0.0
[81] = 0.0
[82] = 0.0
[83] = 0.0
[84] = 0.0
[85] = 0.0
[86] = 0.0
[87] = 0.0
[88] = 0.0
[89] = 0.0
[90] = 0.0
[91] = 0.0
[92] = 0.0
[93] = 0.0
[94] = 0.0
[95] = 0.0
[96] = 0.0
[97] = 0.0
[98] = 0.0

Optimal !
Objective function value is 17.0
Selected nodes: 10, 13, 16, 20
Cbc0031I 12 added rows had average density of 33.75
Cbc0013I At root node, 12 cuts changed objective from 14.153846 to 15.912829 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.221 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1074 row cuts average 38.2 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.557 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 127 row cuts average 37.4 elements, 0 column cuts (0 active)  in 0.177 seconds - new frequency is 1
Cbc0030I Thread 0 used 0 times,  waiting to start 0, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 9.2983246e-06 locked, 3.3378601e-06 waiting for locks
Cbc0001I Search completed - best objective 17, took 5385 iterations and 0 nodes (5.01 seconds)
Cbc0032I Strong branching done 16 times (1156 iterations), fathomed 2 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 69 variables fixed on reduced cost
Total time (CPU seconds):       5.04   (Wallclock seconds):       5.05

