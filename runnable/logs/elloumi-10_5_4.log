
###############################################################
 General Information 
###############################################################

Formulation: ELLOUMI, loglevel: 1 , ratio: 0, 
timeout: 7200.0, threads: 1 

Problem parameters: 
 n = 10 
 p = 5 

Instance values: 
10×10 Named Array{Int64,2}
A ╲ B │  1   2   3   4   5   6   7   8   9  10
──────┼───────────────────────────────────────
1     │  0  77  40  61  40  38  12  22  92   2
2     │ 21   0  27  79  59  27  55  59  96  60
3     │ 39  38   0  80  21   1  10  62  33  38
4     │ 66   5  64   0  43  63  74  44  10  25
5     │ 84  67  76  34   0  65   3  18   9  36
6     │ 82  74  75  29  30   0  22  95  12  61
7     │ 20   1  37  16   7  38   0  38   8  67
8     │ 56  62  85   5  12  72  96   0  19  89
9     │ 49  37  56  76  13  18  53  95   0  11
10    │ 63  49  87   4  83  87  60  82  22   0

D = [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 25, 27, 29, 30, 33, 34, 36, 37, 38, 39, 40, 43, 44, 49, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 89, 92, 95, 96]
k = 61
Cgl0003I 5 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 298 strengthened rows, 0 substitutions
Cgl0004I processed model has 495 rows, 65 columns (65 integer (65 of which binary)) and 3462 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 12 integers unsatisfied sum - 3.5
Cbc0038I Pass   1: suminf.    3.16667 (13) obj. 6.83333 iterations 7
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 9 iterations 7
Cbc0038I Solution found of 9
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 495 rows 65 columns, reduced to 92 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of 7.87509
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.16667 (13) obj. 6.83333 iterations 0
Cbc0038I Pass   4: suminf.    2.24982 (11) obj. 7.87509 iterations 7
Cbc0038I Pass   5: suminf.    2.16329 (13) obj. 7.87509 iterations 3
Cbc0038I Pass   6: suminf.    3.37491 (11) obj. 7.87509 iterations 20
Cbc0038I Pass   7: suminf.    3.37491 (11) obj. 7.87509 iterations 3
Cbc0038I Pass   8: suminf.    4.46436 (12) obj. 7.87509 iterations 11
Cbc0038I Pass   9: suminf.    3.00000 (9) obj. 7.33333 iterations 13
Cbc0038I Pass  10: suminf.    3.00000 (9) obj. 7.33333 iterations 8
Cbc0038I Pass  11: suminf.    3.87509 (10) obj. 7.87509 iterations 13
Cbc0038I Pass  12: suminf.    2.24982 (11) obj. 7.87509 iterations 6
Cbc0038I Pass  13: suminf.    2.16329 (13) obj. 7.87509 iterations 3
Cbc0038I Pass  14: suminf.    3.37491 (11) obj. 7.87509 iterations 14
Cbc0038I Pass  15: suminf.    3.37491 (11) obj. 7.87509 iterations 5
Cbc0038I Pass  16: suminf.    3.37491 (11) obj. 7.87509 iterations 7
Cbc0038I Pass  17: suminf.    3.37491 (11) obj. 7.87509 iterations 2
Cbc0038I Pass  18: suminf.    3.37491 (11) obj. 7.87509 iterations 5
Cbc0038I Pass  19: suminf.    3.37491 (11) obj. 7.87509 iterations 4
Cbc0038I Pass  20: suminf.    4.46436 (12) obj. 7.87509 iterations 8
Cbc0038I Pass  21: suminf.    3.00000 (9) obj. 7.33333 iterations 14
Cbc0038I Pass  22: suminf.    3.00000 (9) obj. 7.33333 iterations 10
Cbc0038I Pass  23: suminf.    3.87509 (10) obj. 7.87509 iterations 13
Cbc0038I Pass  24: suminf.    2.24982 (11) obj. 7.87509 iterations 11
Cbc0038I Pass  25: suminf.    2.16329 (13) obj. 7.87509 iterations 4
Cbc0038I Pass  26: suminf.    3.27509 (12) obj. 7.87509 iterations 12
Cbc0038I Pass  27: suminf.    3.00000 (12) obj. 7.6 iterations 10
Cbc0038I Pass  28: suminf.    3.59727 (12) obj. 7.87509 iterations 16
Cbc0038I Pass  29: suminf.    2.86246 (13) obj. 7.87509 iterations 8
Cbc0038I Pass  30: suminf.    4.36468 (13) obj. 7.87509 iterations 11
Cbc0038I Pass  31: suminf.    3.16667 (13) obj. 6.83333 iterations 14
Cbc0038I Pass  32: suminf.    2.79158 (12) obj. 7.87509 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 495 rows 65 columns, reduced to 101 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.56 seconds)
Cbc0038I After 0.56 seconds - Feasibility pump exiting with objective of 9 - took 0.53 seconds
Cbc0012I Integer solution of 9 found by feasibility pump after 0 iterations and 0 nodes (0.56 seconds)
Cbc0038I Full problem 495 rows 65 columns, reduced to 65 rows 12 columns

###############################################################
 Elloumi 
###############################################################

Y 
10-element Named Array{Float64,1}
A  │ 
───┼────
1  │ 0.0
2  │ 1.0
3  │ 0.0
4  │ 0.0
5  │ 0.0
6  │ 1.0
7  │ 0.0
8  │ 1.0
9  │ 1.0
10 │ 1.0

uk: 1 dimensions:
[ 2] = 1.0
[ 3] = 1.0
[ 4] = 1.0
[ 5] = 1.0
[ 6] = 1.0
[ 7] = 1.0
[ 8] = 1.0
[ 9] = 1.0
[10] = 0.0
[11] = 0.0
[12] = 0.0
[13] = 0.0
[14] = 0.0
[15] = 0.0
[16] = 0.0
[17] = 0.0
[18] = 0.0
[19] = 0.0
[20] = 0.0
[21] = 0.0
[22] = 0.0
[23] = 0.0
[24] = 0.0
[25] = 0.0
[26] = 0.0
[27] = 0.0
[28] = 0.0
[29] = 0.0
[30] = 0.0
[31] = 0.0
[32] = 0.0
[33] = 0.0
[34] = 0.0
[35] = 0.0
[36] = 0.0
[37] = 0.0
[38] = 0.0
[39] = 0.0
[40] = 0.0
[41] = 0.0
[42] = 0.0
[43] = 0.0
[44] = 0.0
[45] = 0.0
[46] = 0.0
[47] = 0.0
[48] = 0.0
[49] = 0.0
[50] = 0.0
[51] = 0.0
[52] = 0.0
[53] = 0.0
[54] = 0.0
[55] = 0.0
[56] = 0.0
[57] = 0.0
[58] = 0.0
[59] = 0.0
[60] = 0.0
[61] = 0.0

Optimal !
Objective function value is 9.0
Selected nodes: 2, 6, 8, 9, 10
Cbc0031I 2 added rows had average density of 4
Cbc0013I At root node, 3 cuts changed objective from 6.75 to 8.6666667 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0030I Thread 0 used 0 times,  waiting to start 4.7683716e-07, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 6.9141388e-06 locked, 2.8610229e-06 waiting for locks
Cbc0001I Search completed - best objective 9, took 9 iterations and 0 nodes (0.58 seconds)
Cbc0035I Maximum depth 0, 29 variables fixed on reduced cost
Total time (CPU seconds):       0.58   (Wallclock seconds):       0.58

