
###############################################################
 General Information 
###############################################################

Formulation: ELLOUMI, loglevel: 1 , ratio: 0, 
timeout: 7200.0, threads: 1 

Problem parameters: 
 n = 10 
 p = 2 

Instance values: 
10×10 Named Array{Int64,2}
A ╲ B │   1    2    3    4    5    6    7    8    9   10
──────┼─────────────────────────────────────────────────
1     │   0   69   31   24   24   34   42   16  100   43
2     │   4    0   85   29   84   95   92   11   10   79
3     │  18    3    0   52   66   94   63   44   92   20
4     │  95   21   70    0    5   12   98   70    9   62
5     │  52   16    1   37    0   49   64   51   34   84
6     │  14   34   49   14   78    0   82   49   61   43
7     │  60   75   21   63   68   10    0   24   48   10
8     │  36   86   53   64   70   26   22    0   73    3
9     │  88   80   13   85   89   54   67   56    0   70
10    │  44   97   26   12   66   11   94    6   42    0

D = [0, 1, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 24, 26, 29, 31, 34, 36, 37, 42, 43, 44, 48, 49, 51, 52, 53, 54, 56, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 73, 75, 78, 79, 80, 82, 84, 85, 86, 88, 89, 92, 94, 95, 97, 98, 100]
k = 61
Cgl0003I 11 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0004I processed model has 445 rows, 59 columns (59 integer (59 of which binary)) and 3133 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 28 integers unsatisfied sum - 7.16667
Cbc0038I Pass   1: suminf.    4.00000 (8) obj. 31 iterations 36
Cbc0038I Pass   2: suminf.    2.00000 (4) obj. 36 iterations 18
Cbc0038I Pass   3: suminf.    2.00000 (4) obj. 36 iterations 8
Cbc0038I Pass   4: suminf.    2.50000 (5) obj. 41.5 iterations 20
Cbc0038I Pass   5: suminf.    2.50000 (5) obj. 41.5 iterations 12
Cbc0038I Pass   6: suminf.    2.00000 (4) obj. 43 iterations 6
Cbc0038I Pass   7: suminf.    2.00000 (4) obj. 43 iterations 3
Cbc0038I Pass   8: suminf.    4.33333 (13) obj. 47 iterations 20
Cbc0038I Pass   9: suminf.    2.00000 (4) obj. 48 iterations 15
Cbc0038I Pass  10: suminf.    2.00000 (4) obj. 48 iterations 4
Cbc0038I Pass  11: suminf.    2.00000 (4) obj. 48 iterations 3
Cbc0038I Pass  12: suminf.    2.00000 (4) obj. 61 iterations 18
Cbc0038I Pass  13: suminf.    2.00000 (4) obj. 61 iterations 9
Cbc0038I Pass  14: suminf.    2.00000 (4) obj. 61 iterations 5
Cbc0038I Pass  15: suminf.    3.00000 (11) obj. 71.5 iterations 40
Cbc0038I Pass  16: suminf.    2.00000 (4) obj. 71 iterations 9
Cbc0038I Pass  17: suminf.    2.00000 (4) obj. 71 iterations 3
Cbc0038I Pass  18: suminf.    2.00000 (4) obj. 71 iterations 5
Cbc0038I Pass  19: suminf.    2.50000 (5) obj. 69 iterations 17
Cbc0038I Pass  20: suminf.    2.50000 (5) obj. 69 iterations 8
Cbc0038I Pass  21: suminf.    2.00000 (4) obj. 70 iterations 11
Cbc0038I Pass  22: suminf.    2.00000 (4) obj. 70 iterations 8
Cbc0038I Pass  23: suminf.    3.50000 (7) obj. 66.5 iterations 25
Cbc0038I Pass  24: suminf.    3.50000 (7) obj. 66.5 iterations 3
Cbc0038I Pass  25: suminf.    2.00000 (4) obj. 70 iterations 11
Cbc0038I Pass  26: suminf.    2.00000 (4) obj. 70 iterations 8
Cbc0038I Pass  27: suminf.    3.00000 (6) obj. 74.5 iterations 17
Cbc0038I Pass  28: suminf.    3.00000 (6) obj. 74.5 iterations 2
Cbc0038I Pass  29: suminf.    2.00000 (4) obj. 77 iterations 7
Cbc0038I Pass  30: suminf.    2.00000 (4) obj. 77 iterations 6
Cbc0038I Rounding solution of 55 is better than previous of 1e+50

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 445 rows 59 columns, reduced to 403 rows 54 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of 51.4668
Cbc0038I Pass  30: suminf.    4.00000 (8) obj. 31 iterations 0
Cbc0038I Pass  31: suminf.    2.50000 (5) obj. 35 iterations 17
Cbc0038I Pass  32: suminf.    2.50000 (5) obj. 35 iterations 3
Cbc0038I Pass  33: suminf.    2.50000 (5) obj. 35 iterations 3
Cbc0038I Pass  34: suminf.    2.50000 (5) obj. 35 iterations 7
Cbc0038I Pass  35: suminf.    2.50000 (5) obj. 35 iterations 4
Cbc0038I Pass  36: suminf.    2.50000 (5) obj. 35 iterations 4
Cbc0038I Pass  37: suminf.    2.00000 (4) obj. 36 iterations 5
Cbc0038I Pass  38: suminf.    2.00000 (4) obj. 36 iterations 11
Cbc0038I Pass  39: suminf.    2.00000 (4) obj. 36 iterations 5
Cbc0038I Pass  40: suminf.    2.00000 (4) obj. 36 iterations 4
Cbc0038I Pass  41: suminf.    2.00000 (4) obj. 36 iterations 8
Cbc0038I Pass  42: suminf.    2.00000 (4) obj. 36 iterations 8
Cbc0038I Pass  43: suminf.    2.50000 (5) obj. 48.5 iterations 21
Cbc0038I Pass  44: suminf.    2.50000 (5) obj. 48.5 iterations 11
Cbc0038I Pass  45: suminf.    2.00000 (4) obj. 50 iterations 11
Cbc0038I Pass  46: suminf.    2.00000 (4) obj. 50 iterations 6
Cbc0038I Pass  47: suminf.    2.00000 (4) obj. 50 iterations 11
Cbc0038I Pass  48: suminf.    2.00000 (4) obj. 50 iterations 8
Cbc0038I Pass  49: suminf.    2.00000 (4) obj. 50 iterations 7
Cbc0038I Pass  50: suminf.    2.13331 (5) obj. 51.4668 iterations 14
Cbc0038I Pass  51: suminf.    2.13331 (5) obj. 51.4668 iterations 8
Cbc0038I Pass  52: suminf.    2.13331 (5) obj. 51.4668 iterations 4
Cbc0038I Pass  53: suminf.    2.13331 (5) obj. 51.4668 iterations 4
Cbc0038I Pass  54: suminf.    2.13331 (5) obj. 51.4668 iterations 4
Cbc0038I Pass  55: suminf.    2.13331 (5) obj. 51.4668 iterations 5
Cbc0038I Pass  56: suminf.    2.13331 (5) obj. 51.4668 iterations 3
Cbc0038I Pass  57: suminf.    3.23338 (7) obj. 51.4668 iterations 13
Cbc0038I Pass  58: suminf.    2.84441 (6) obj. 51.4668 iterations 4
Cbc0038I Pass  59: suminf.    3.00000 (6) obj. 51 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 445 rows 59 columns, reduced to 326 rows 43 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of 55 - took 0.10 seconds
Cbc0012I Integer solution of 55 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0012I Integer solution of 53 found by DiveCoefficient after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 445 rows 59 columns, reduced to 224 rows 28 columns - 14 fixed gives 84, 14 - ok now
Cbc0038I Full problem 445 rows 59 columns, reduced to 84 rows 14 columns
Cbc0012I Integer solution of 48 found by RINS after 0 iterations and 0 nodes (0.12 seconds)

###############################################################
 Elloumi 
###############################################################

Y 
10-element Named Array{Float64,1}
A  │ 
───┼────
1  │ 0.0
2  │ 0.0
3  │ 0.0
4  │ 0.0
5  │ 0.0
6  │ 0.0
7  │ 0.0
8  │ 0.0
9  │ 1.0
10 │ 1.0

uk: 1 dimensions:
[ 2] = 1.0
[ 3] = 1.0
[ 4] = 1.0
[ 5] = 1.0
[ 6] = 1.0
[ 7] = 1.0
[ 8] = 1.0
[ 9] = 1.0
[10] = 1.0
[11] = 1.0
[12] = 1.0
[13] = 1.0
[14] = 1.0
[15] = 1.0
[16] = 1.0
[17] = 1.0
[18] = 1.0
[19] = 1.0
[20] = 1.0
[21] = 1.0
[22] = 1.0
[23] = 1.0
[24] = 1.0
[25] = 1.0
[26] = 1.0
[27] = 0.0
[28] = 0.0
[29] = 0.0
[30] = 0.0
[31] = 0.0
[32] = 0.0
[33] = 0.0
[34] = 0.0
[35] = 0.0
[36] = 0.0
[37] = 0.0
[38] = 0.0
[39] = 0.0
[40] = 0.0
[41] = 0.0
[42] = 0.0
[43] = 0.0
[44] = 0.0
[45] = 0.0
[46] = 0.0
[47] = 0.0
[48] = 0.0
[49] = 0.0
[50] = 0.0
[51] = 0.0
[52] = 0.0
[53] = 0.0
[54] = 0.0
[55] = 0.0
[56] = 0.0
[57] = 0.0
[58] = 0.0
[59] = 0.0
[60] = 0.0
[61] = 0.0

Optimal !
Objective function value is 43.0
Selected nodes: 9, 10
Cbc0031I 16 added rows had average density of 30.9375
Cbc0013I At root node, 16 cuts changed objective from 28.666667 to 35.511557 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 903 row cuts average 36.4 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 7 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 45 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 48 best solution, best possible 36.309201 (0.90 seconds)
Cbc0016I Integer solution of 43 found by strong branching after 3832 iterations and 1 nodes (0.95 seconds)
Clp0006I 0  Obj 42.555556 Primal inf 0.13294604 (1)
Cbc0012I Integer solution of 43 found by heuristic after 3524 iterations and 0 nodes (0.95 seconds)
Cbc0030I Thread 0 used 2 times,  waiting to start 7.1525574e-07, 0.052957 cpu time, 21 locks, 0.00021409988 locked, 4.0531158e-06 waiting for locks
Cbc0030I Main thread 0.057120562 waiting for threads,  9 locks, 2.6702881e-05 locked, 2.3841858e-06 waiting for locks
Cbc0001I Search completed - best objective 43, took 3873 iterations and 2 nodes (0.96 seconds)
Cbc0032I Strong branching done 134 times (2689 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       0.98

