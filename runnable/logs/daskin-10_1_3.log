
###############################################################
 General Information 
###############################################################

Formulation: DASKIN, loglevel: 1 , ratio: 0, 
timeout: 7200.0, threads: 1 

Problem parameters: 
 n = 10 
 p = 1 

Instance values: 
10×10 Named Array{Int64,2}
A ╲ B │  1   2   3   4   5   6   7   8   9  10
──────┼───────────────────────────────────────
1     │  0   6  53  65  92  25   0  21  79  46
2     │ 54   0   8  72  46  50  59  48  95  19
3     │ 39  93   0  94  63  88  54  61  67  83
4     │ 38  75  85   0  85  56  51  26  63  85
5     │ 91  41  49  10   0  15   0  73   8  48
6     │ 58  19   0  38  30   0  32  86  36  60
7     │ 51  94  91  60  44  92   0  65  68  27
8     │ 58  81  52  62  19  67  50   0  89  54
9     │ 22   5  57  93  30   6  97  18   0  84
10    │ 98  99  41  95  25   1  79  43  50   0
Cgl0008I 1 inequality constraints converted to equality constraints
Cgl0005I 11 SOS with 111 members
Cgl0004I processed model has 121 rows, 112 columns (111 integer (111 of which binary)) and 408 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 66 integers unsatisfied sum - 11
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 85 iterations 69
Cbc0038I Solution found of 85
Cbc0038I Relaxing continuous gives 85
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 112 columns, reduced to 81 rows 67 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 80.5518
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.08214 (22) obj. 80.5518 iterations 6
Cbc0038I Pass   3: suminf.    1.74513 (33) obj. 80.5518 iterations 23
Cbc0038I Pass   4: suminf.    1.74513 (33) obj. 80.5518 iterations 10
Cbc0038I Pass   5: suminf.    1.74513 (33) obj. 80.5518 iterations 7
Cbc0038I Pass   6: suminf.    3.93569 (33) obj. 80.5518 iterations 63
Cbc0038I Pass   7: suminf.    3.93569 (33) obj. 80.5518 iterations 4
Cbc0038I Pass   8: suminf.    1.74513 (33) obj. 80.5518 iterations 28
Cbc0038I Pass   9: suminf.    1.39373 (22) obj. 80.5518 iterations 42
Cbc0038I Pass  10: suminf.    1.39373 (22) obj. 80.5518 iterations 22
Cbc0038I Pass  11: suminf.    3.53656 (33) obj. 80.5518 iterations 33
Cbc0038I Pass  12: suminf.    3.73052 (22) obj. 80.5518 iterations 19
Cbc0038I Pass  13: suminf.    3.73052 (22) obj. 80.5518 iterations 23
Cbc0038I Pass  14: suminf.    3.99120 (33) obj. 80.5518 iterations 54
Cbc0038I Pass  15: suminf.    3.99120 (33) obj. 80.5518 iterations 2
Cbc0038I Pass  16: suminf.    2.63351 (33) obj. 80.5518 iterations 46
Cbc0038I Pass  17: suminf.    2.63351 (33) obj. 80.5518 iterations 2
Cbc0038I Pass  18: suminf.    3.73052 (22) obj. 80.5518 iterations 36
Cbc0038I Pass  19: suminf.    3.73052 (22) obj. 80.5518 iterations 1
Cbc0038I Pass  20: suminf.    3.99120 (33) obj. 80.5518 iterations 44
Cbc0038I Pass  21: suminf.    3.99120 (33) obj. 80.5518 iterations 1
Cbc0038I Pass  22: suminf.    2.69954 (33) obj. 80.5518 iterations 35
Cbc0038I Pass  23: suminf.    2.63351 (33) obj. 80.5518 iterations 8
Cbc0038I Pass  24: suminf.    3.73052 (22) obj. 80.5518 iterations 39
Cbc0038I Pass  25: suminf.    3.73052 (22) obj. 80.5518 iterations 1
Cbc0038I Pass  26: suminf.    8.82946 (22) obj. 80.5518 iterations 21
Cbc0038I Pass  27: suminf.    3.99120 (33) obj. 80.5518 iterations 23
Cbc0038I Pass  28: suminf.    2.63351 (33) obj. 80.5518 iterations 25
Cbc0038I Pass  29: suminf.    2.63351 (33) obj. 80.5518 iterations 11
Cbc0038I Pass  30: suminf.    3.73052 (22) obj. 80.5518 iterations 40
Cbc0038I Pass  31: suminf.    3.73052 (22) obj. 80.5518 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 112 columns, reduced to 111 rows 100 columns - 3 fixed gives 0, 0 - ok now
Cbc0038I Full problem 121 rows 112 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of 85 - took 0.03 seconds
Cbc0012I Integer solution of 85 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 121 rows 112 columns, reduced to 81 rows 67 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 49.517097 to 166 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 84 row cuts average 2.8 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Cliq
###############################################################
 Daskin 
###############################################################

X 
10×10 Named Array{Float64,2}
A ╲ B │   1    2    3    4    5    6    7    8    9   10
──────┼─────────────────────────────────────────────────
1     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0
2     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0
3     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0
4     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0
5     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0
6     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0
7     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0
8     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0
9     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0
10    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0

Y 
10-element Named Array{Float64,1}
A  │ 
───┼────
1  │ 0.0
2  │ 0.0
3  │ 0.0
4  │ 0.0
5  │ 0.0
6  │ 0.0
7  │ 0.0
8  │ 0.0
9  │ 0.0
10 │ 1.0

Optimal !
Objective function value is 85.0
Selected nodes: 10

ue) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0030I Thread 0 used 0 times,  waiting to start 2.3841858e-07, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 7.390976e-06 locked, 2.3841858e-06 waiting for locks
Cbc0001I Search completed - best objective 85, took 0 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
1 bounds tightened after postprocessing

Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

