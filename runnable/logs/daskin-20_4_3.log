
###############################################################
 General Information 
###############################################################

Formulation: DASKIN, loglevel: 1 , ratio: 0, 
timeout: 7200.0, threads: 1 

Problem parameters: 
 n = 20 
 p = 4 

Instance values: 
20×20 Named Array{Int64,2}
A ╲ B │   1    2    3    4    5    6    7  …   14   15   16   17   18   19   20
──────┼────────────────────────────────────────────────────────────────────────
1     │   0   40   29   81   76   24   51  …   74   38   60   49   73   47    3
2     │  78    0   29   27   35   44   81       7   69   47   40   62   35   24
3     │  20   43    0   34   93   85   59      94   62   20   55    5   81   77
4     │  90   90   60    0   66   55   97      39    4   84   95    5   58   75
5     │  46   20   98   90    0   63   89       2   31   76   38   96   40   70
6     │  36    5   92   97    0    0   53      24    7   37   13   54   11   44
7     │  87   23   47   13   25    2    0      97   37   38   92   72   62   64
8     │  72   14   67   13   41   94   49      90   19    7   66   65    9   42
9     │  99   28   13   81   82   35   20      83   34    8   27   82   20  100
⋮         ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮  ⋱    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮
12    │  32   82   85   41   84   77   43      57   27   28   30    9   69   94
13    │  52   52   38    1   42   26   22      36   80   14    0   71   35   96
14    │   4   14  100   44   44   68   59       0   25   61   38   46   71   52
15    │  19   40   53   58   62   36    5      22    0   50   57   91    6   81
16    │  22   51   11   84   20   87   30      12   30    0   43   50   64   58
17    │  58   45   80   41   60   10   10      62   59   79    0   87   17   92
18    │  16    1   40   32   22   32   39      57   15   31   23    0   15   27
19    │  64   20   32   64   76   32   25      37   51   52   64   25    0   24
20    │  24   23   31   39   82   60   53  …   59   71   96   64   31   53    0
Cgl0004I processed model has 441 rows, 421 columns (420 integer (420 of which binary)) and 1616 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 112 integers unsatisfied sum - 22.3481
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 100 iterations 275
Cbc0038I Solution found of 100
Cbc0038I Relaxing continuous gives 100
Cbc0038I Before mini branch and bound, 297 integers at bound fixed and 0 continuous
Cbc0038I Full problem 441 rows 421 columns, reduced to 148 rows 124 columns
Cbc0038I Mini branch and bound improved solution from 100 to 23 (0.09 seconds)
Cbc0038I Round again with cutoff of 20.7881
Cbc0038I Pass   2: suminf.   13.41454 (68) obj. 20.7881 iterations 185
Cbc0038I Pass   3: suminf.   10.94393 (67) obj. 20.7881 iterations 32
Cbc0038I Pass   4: suminf.    5.46916 (33) obj. 20.7881 iterations 88
Cbc0038I Pass   5: suminf.    4.76663 (36) obj. 20.7881 iterations 18
Cbc0038I Pass   6: suminf.    7.70478 (28) obj. 20.7881 iterations 73
Cbc0038I Pass   7: suminf.    5.28959 (16) obj. 20.7881 iterations 48
Cbc0038I Pass   8: suminf.    4.97757 (15) obj. 20.7881 iterations 2
Cbc0038I Pass   9: suminf.    3.82245 (17) obj. 20.7881 iterations 14
Cbc0038I Pass  10: suminf.    3.80399 (16) obj. 20.7881 iterations 8
Cbc0038I Pass  11: suminf.    3.84320 (16) obj. 20.7881 iterations 25
Cbc0038I Pass  12: suminf.    3.84320 (16) obj. 20.7881 iterations 10
Cbc0038I Pass  13: suminf.    4.77193 (14) obj. 20.7881 iterations 23
Cbc0038I Pass  14: suminf.    4.45991 (13) obj. 20.7881 iterations 5
Cbc0038I Pass  15: suminf.    3.30479 (15) obj. 20.7881 iterations 17
Cbc0038I Pass  16: suminf.    3.28633 (14) obj. 20.7881 iterations 8
Cbc0038I Pass  17: suminf.    3.84320 (16) obj. 20.7881 iterations 20
Cbc0038I Pass  18: suminf.    3.84320 (16) obj. 20.7881 iterations 17
Cbc0038I Pass  19: suminf.    4.77193 (14) obj. 20.7881 iterations 16
Cbc0038I Pass  20: suminf.    4.45991 (13) obj. 20.7881 iterations 3
Cbc0038I Pass  21: suminf.    3.30479 (15) obj. 20.7881 iterations 18
Cbc0038I Pass  22: suminf.    3.28633 (14) obj. 20.7881 iterations 8
Cbc0038I Pass  23: suminf.    3.84320 (16) obj. 20.7881 iterations 20
Cbc0038I Pass  24: suminf.    3.84320 (16) obj. 20.7881 iterations 11
Cbc0038I Pass  25: suminf.    4.77193 (14) obj. 20.7881 iterations 23
Cbc0038I Pass  26: suminf.    4.45991 (13) obj. 20.7881 iterations 5
Cbc0038I Pass  27: suminf.    3.30479 (15) obj. 20.7881 iterations 16
Cbc0038I Pass  28: suminf.    3.28633 (14) obj. 20.7881 iterations 8
Cbc0038I Pass  29: suminf.    3.84320 (16) obj. 20.7881 iterations 21
Cbc0038I Pass  30: suminf.    3.84320 (16) obj. 20.7881 iterations 17
Cbc0038I Pass  31: suminf.    4.77193 (14) obj. 20.7881 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 441 rows 421 columns, reduced to 185 rows 164 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of 23 - took 0.21 seconds
Cbc0012I Integer solution of 23 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 441 rows 421 columns, reduced to 137 rows 113 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 9.8803192 to 23 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 272 row cuts average 5.1 elements, 1 column cuts (1 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new
###############################################################
 Daskin 
###############################################################

X 
20×20 Named Array{Float64,2}
A ╲ B │   1    2    3    4    5    6    7  …   14   15   16   17   18   19   20
──────┼────────────────────────────────────────────────────────────────────────
1     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  0.0  0.0
2     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
3     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
4     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
5     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
6     │ 0.0  1.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
7     │ 0.0  1.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
8     │ 0.0  1.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
9     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  1.0  0.0
⋮         ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮  ⋱    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮
12    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
13    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
14    │ 0.0  1.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
15    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  1.0  0.0
16    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
17    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  1.0  0.0
18    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  1.0  0.0
19    │ 0.0  1.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
20    │ 0.0  1.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  0.0  0.0

Y 
20-element Named Array{Float64,1}
A  │ 
───┼────
1  │ 0.0
2  │ 1.0
3  │ 0.0
4  │ 0.0
5  │ 0.0
6  │ 0.0
7  │ 0.0
8  │ 0.0
9  │ 0.0
⋮      ⋮
12 │ 1.0
13 │ 1.0
14 │ 0.0
15 │ 0.0
16 │ 0.0
17 │ 0.0
18 │ 0.0
19 │ 1.0
20 │ 0.0

Optimal !
Objective function value is 23.0
Selected nodes: 2, 12, 13, 19

 frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0030I Thread 0 used 0 times,  waiting to start 2.3841858e-07, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 8.1062317e-06 locked, 2.6226044e-06 waiting for locks
Cbc0001I Search completed - best objective 23, took 32 iterations and 0 nodes (0.25 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.27

