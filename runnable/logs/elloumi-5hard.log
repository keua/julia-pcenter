
###############################################################
 General Information 
###############################################################

Formulation: ELLOUMI, loglevel: 1 , ratio: 0, 
timeout: 7200.0, threads: 1 

Problem parameters: 
 n = 100 
 p = 33 

Instance values: 
100×100 Named Array{Int64,2}
A ╲ B │   1    2    3    4    5    6    7  …   94   95   96   97   98   99  100
──────┼────────────────────────────────────────────────────────────────────────
1     │   0   38   89  155  157  122  119  …   43  116  137  133  158   73   17
2     │  38    0   51  117  119  155  152       5   78  117  102  120   35   55
3     │  89   51    0   66  134  172  149      46  119  158  143  135   50  106
4     │ 155  117   66    0   73  124  190     112  185  133  118  171  116  172
5     │ 157  119  134   73    0   51  117     114  151   60   45   98   84  155
6     │ 122  155  172  124   51    0   66     150  182   91   95  148  122  139
7     │ 119  152  149  190  117   66    0     147  157   66   81  134  121  136
8     │ 147  180  177  218  145   94   28     175  185   94  109  162  145  164
9     │ 231  224  218  246  173  184  118     219  204  113  128  181  189  248
⋮         ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮  ⋱    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮
92    │  78   40   81  147  107  157  143      35  108   77   62  115   53   95
93    │  49   11   52  118  108  146  145       6   79  106   91  109   24   66
94    │  43    5   46  112  114  150  147       0   73  112   97  115   30   60
95    │ 116   78  119  185  151  182  157      73    0   91  106  159  103  133
96    │ 137  117  158  133   60   91   66     112   91    0   15   68  108  154
97    │ 133  102  143  118   45   95   81      97  106   15    0   53   93  150
98    │ 158  120  135  171   98  148  134     115  159   68   53    0   85  156
99    │  73   35   50  116   84  122  121      30  103  108   93   85    0   71
100   │  17   55  106  172  155  139  136  …   60  133  154  150  156   71    0

D = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 257, 258, 259, 261, 262, 264, 265, 278, 283, 312]
k = 262
Cgl0003I 23 fixed, 0 tightened bounds, 3868 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12035 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11529 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8889 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7355 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5941 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4354 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2952 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1269 strengthened rows, 0 substitutions
Cgl0004I processed model has 17248 rows, 338 columns (338 integer (338 of which binary)) and 878698 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 106 integers unsatisfied sum - 31.8364
Cbc0038I Pass   1: (18.04 seconds) suminf.   11.00000 (38) obj. 46.2 iterations 287
Cbc0038I Pass   2: (18.24 seconds) suminf.    0.00000 (0) obj. 48 iterations 102
Cbc0038I Solution found of 48
Cbc0038I Before mini branch and bound, 224 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17248 rows 338 columns, reduced to 7265 rows 114 columns
Cbc0038I Mini branch and bound did not improve solution (27.17 seconds)
Cbc0038I Round again with cutoff of 46.0928
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: (27.35 seconds) suminf.   11.16490 (40) obj. 46.0928 iterations 5
Cbc0038I Pass   4: (27.92 seconds) suminf.    3.90718 (12) obj. 46.0928 iterations 156
Cbc0038I Pass   5: (28.33 seconds) suminf.    3.26946 (12) obj. 46.0928 iterations 86
Cbc0038I Pass   6: (28.94 seconds) suminf.    6.93939 (74) obj. 44.4545 iterations 316
Cbc0038I Pass   7: (29.28 seconds) suminf.    9.11676 (21) obj. 46.0928 iterations 197
Cbc0038I Pass   8: (29.45 seconds) suminf.    3.50676 (46) obj. 46.0928 iterations 68
Cbc0038I Pass   9: (29.55 seconds) suminf.    3.50676 (46) obj. 46.0928 iterations 4
Cbc0038I Pass  10: (29.95 seconds) suminf.    7.21622 (62) obj. 44.2432 iterations 235
Cbc0038I Pass  11: (30.14 seconds) suminf.    6.90452 (78) obj. 44.5427 iterations 53
Cbc0038I Pass  12: (30.48 seconds) suminf.    4.29116 (18) obj. 46.0928 iterations 192
Cbc0038I Pass  13: (30.61 seconds) suminf.    3.50676 (46) obj. 46.0928 iterations 47
Cbc0038I Pass  14: (31.20 seconds) suminf.    6.97537 (78) obj. 44.4138 iterations 350
Cbc0038I Pass  15: (31.52 seconds) suminf.   11.90718 (24) obj. 46.0928 iterations 164
Cbc0038I Pass  16: (31.79 seconds) suminf.    9.00000 (18) obj. 46 iterations 126
Cbc0038I Pass  17: (31.94 seconds) suminf.    9.00000 (18) obj. 46 iterations 57
Cbc0038I Pass  18: (32.23 seconds) suminf.    8.00000 (16) obj. 46 iterations 126
Cbc0038I Pass  19: (32.44 seconds) suminf.    8.00000 (16) obj. 46 iterations 97
Cbc0038I Pass  20: (32.60 seconds) suminf.    7.72155 (16) obj. 46.0928 iterations 71
Cbc0038I Pass  21: (33.80 seconds) suminf.    6.90718 (14) obj. 46.0928 iterations 14
Cbc0038I Pass  22: (34.13 seconds) suminf.    6.72108 (64) obj. 46.0928 iterations 155
Cbc0038I Pass  23: (34.36 seconds) suminf.    3.81437 (16) obj. 46.0928 iterations 132
Cbc0038I Pass  24: (34.72 seconds) suminf.    3.26946 (12) obj. 46.0928 iterations 45
Cbc0038I Pass  25: (35.27 seconds) suminf.    6.62500 (53) obj. 44.625 iterations 243
Cbc0038I Pass  26: (35.54 seconds) suminf.    6.90718 (53) obj. 46.0928 iterations 124
Cbc0038I Pass  27: (35.82 seconds) suminf.    6.62645 (71) obj. 46.0928 iterations 115
Cbc0038I Pass  28: (36.05 seconds) suminf.    9.11676 (21) obj. 46.0928 iterations 128
Cbc0038I Pass  29: (36.18 seconds) suminf.    3.50676 (46) obj. 46.0928 iterations 55
Cbc0038I Pass  30: (36.20 seconds) suminf.    3.50676 (46) obj. 46.0928 iterations 0
Cbc0038I Pass  31: (36.91 seconds) suminf.    6.50000 (13) obj. 44.5 iterations 105
Cbc0038I Pass  32: (37.29 seconds) suminf.    3.08682 (12) obj. 46.0928 iterations 86
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 197 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17248 rows 338 columns, reduced to 9004 rows 141 columns - 15 fixed gives 6951, 126 - ok now
Cbc0038I Full problem 17248 rows 338 columns, reduced to 6884 rows 126 columns
Cbc0038I Mini branch and bound did not improve solution (43.70 seconds)
Cbc0038I After 43.70 seconds - Feasibility pump exiting with objective of 48 - took 26.52 seconds
Cbc0012I Integer solution of 48 found by feasibility pump after 0 iterations and 0 nodes (43.73 seconds)
Cbc0038I Full problem 17248 rows 338 columns, reduced to 6952 rows 108 columns
Cbc0031I 9 added rows had average density of 109.11111
Cbc0013I At root node, 9 cuts changed objective from 37.927273 to 41.948913 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 29.0 elements, 14 column cuts (14 active)  in 0.738 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 62.5 elements, 0 column cuts (0 active)  in 0.591 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 2.646 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 203 row cuts average 126.2 elements, 0 column cuts (0 active)  in 1.056 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 48 best solution, best possible 41.948913 (74.29 seconds)

###############################################################
 Elloumi 
###############################################################

Y 
100-element Named Array{Float64,1}
A   │ 
────┼────
1   │ 1.0
2   │ 0.0
3   │ 1.0
4   │ 1.0
5   │ 0.0
6   │ 0.0
7   │ 0.0
8   │ 1.0
9   │ 1.0
⋮       ⋮
92  │ 1.0
93  │ 0.0
94  │ 0.0
95  │ 1.0
96  │ 0.0
97  │ 0.0
98  │ 1.0
99  │ 0.0
100 │ 0.0

uk: 1 dimensions:
[  2] = 1.0
[  3] = 1.0
[  4] = 1.0
[  5] = 1.0
[  6] = 1.0
[  7] = 1.0
[  8] = 1.0
[  9] = 1.0
[ 10] = 1.0
[ 11] = 1.0
[ 12] = 1.0
[ 13] = 1.0
[ 14] = 1.0
[ 15] = 1.0
[ 16] = 1.0
[ 17] = 1.0
[ 18] = 1.0
[ 19] = 1.0
[ 20] = 1.0
[ 21] = 1.0
[ 22] = 1.0
[ 23] = 1.0
[ 24] = 1.0
[ 25] = 1.0
[ 26] = 1.0
[ 27] = 1.0
[ 28] = 1.0
[ 29] = 1.0
[ 30] = 1.0
[ 31] = 1.0
[ 32] = 1.0
[ 33] = 1.0
[ 34] = 1.0
[ 35] = 1.0
[ 36] = 1.0
[ 37] = 1.0
[ 38] = 1.0
[ 39] = 1.0
[ 40] = 1.0
[ 41] = 1.0
[ 42] = 1.0
[ 43] = 1.0
[ 44] = 1.0
[ 45] = 1.0
[ 46] = 1.0
[ 47] = 1.0
[ 48] = 1.0
[ 49] = 1.0
[ 50] = 0.0
[ 51] = 0.0
[ 52] = 0.0
[ 53] = 0.0
[ 54] = 0.0
[ 55] = 0.0
[ 56] = 0.0
[ 57] = 0.0
[ 58] = 0.0
[ 59] = 0.0
[ 60] = 0.0
[ 61] = 0.0
[ 62] = 0.0
[ 63] = 0.0
[ 64] = 0.0
[ 65] = 0.0
[ 66] = 0.0
[ 67] = 0.0
[ 68] = 0.0
[ 69] = 0.0
[ 70] = 0.0
[ 71] = 0.0
[ 72] = 0.0
[ 73] = 0.0
[ 74] = 0.0
[ 75] = 0.0
[ 76] = 0.0
[ 77] = 0.0
[ 78] = 0.0
[ 79] = 0.0
[ 80] = 0.0
[ 81] = 0.0
[ 82] = 0.0
[ 83] = 0.0
[ 84] = 0.0
[ 85] = 0.0
[ 86] = 0.0
[ 87] = 0.0
[ 88] = 0.0
[ 89] = 0.0
[ 90] = 0.0
[ 91] = 0.0
[ 92] = 0.0
[ 93] = 0.0
[ 94] = 0.0
[ 95] = 0.0
[ 96] = 0.0
[ 97] = 0.0
[ 98] = 0.0
[ 99] = 0.0
[100] = 0.0
[101] = 0.0
[102] = 0.0
[103] = 0.0
[104] = 0.0
[105] = 0.0
[106] = 0.0
[107] = 0.0
[108] = 0.0
[109] = 0.0
[110] = 0.0
[111] = 0.0
[112] = 0.0
[113] = 0.0
[114] = 0.0
[115] = 0.0
[116] = 0.0
[117] = 0.0
[118] = 0.0
[119] = 0.0
[120] = 0.0
[121] = 0.0
[122] = 0.0
[123] = 0.0
[124] = 0.0
[125] = 0.0
[126] = 0.0
[127] = 0.0
[128] = 0.0
[129] = 0.0
[130] = 0.0
[131] = 0.0
[132] = 0.0
[133] = 0.0
[134] = 0.0
[135] = 0.0
[136] = 0.0
[137] = 0.0
[138] = 0.0
[139] = 0.0
[140] = 0.0
[141] = 0.0
[142] = 0.0
[143] = 0.0
[144] = 0.0
[145] = 0.0
[146] = 0.0
[147] = 0.0
[148] = 0.0
[149] = 0.0
[150] = 0.0
[151] = 0.0
[152] = 0.0
[153] = 0.0
[154] = 0.0
[155] = 0.0
[156] = 0.0
[157] = 0.0
[158] = 0.0
[159] = 0.0
[160] = 0.0
[161] = 0.0
[162] = 0.0
[163] = 0.0
[164] = 0.0
[165] = 0.0
[166] = 0.0
[167] = 0.0
[168] = 0.0
[169] = 0.0
[170] = 0.0
[171] = 0.0
[172] = 0.0
[173] = 0.0
[174] = 0.0
[175] = 0.0
[176] = 0.0
[177] = 0.0
[178] = 0.0
[179] = 0.0
[180] = 0.0
[181] = 0.0
[182] = 0.0
[183] = 0.0
[184] = 0.0
[185] = 0.0
[186] = 0.0
[187] = 0.0
[188] = 0.0
[189] = 0.0
[190] = 0.0
[191] = 0.0
[192] = 0.0
[193] = 0.0
[194] = 0.0
[195] = 0.0
[196] = 0.0
[197] = 0.0
[198] = 0.0
[199] = 0.0
[200] = 0.0
[201] = 0.0
[202] = 0.0
[203] = 0.0
[204] = 0.0
[205] = 0.0
[206] = 0.0
[207] = 0.0
[208] = 0.0
[209] = 0.0
[210] = 0.0
[211] = 0.0
[212] = 0.0
[213] = 0.0
[214] = 0.0
[215] = 0.0
[216] = 0.0
[217] = 0.0
[218] = 0.0
[219] = 0.0
[220] = 0.0
[221] = 0.0
[222] = 0.0
[223] = 0.0
[224] = 0.0
[225] = 0.0
[226] = 0.0
[227] = 0.0
[228] = 0.0
[229] = 0.0
[230] = 0.0
[231] = 0.0
[232] = 0.0
[233] = 0.0
[234] = 0.0
[235] = 0.0
[236] = 0.0
[237] = 0.0
[238] = 0.0
[239] = 0.0
[240] = 0.0
[241] = 0.0
[242] = 0.0
[243] = 0.0
[244] = 0.0
[245] = 0.0
[246] = 0.0
[247] = 0.0
[248] = 0.0
[249] = 0.0
[250] = 0.0
[251] = 0.0
[252] = 0.0
[253] = 0.0
[254] = 0.0
[255] = 0.0
[256] = 0.0
[257] = 0.0
[258] = 0.0
[259] = 0.0
[260] = 0.0
[261] = 0.0
[262] = 0.0

Optimal !
Objective function value is 48.0
Selected nodes: 1, 3, 4, 8, 9, 10, 11, 12, 13, 19, 22, 23, 25, 26, 29, 32, 37, 38, 40, 45, 48, 53, 58, 68, 70, 73, 80, 82, 85, 91, 92, 95, 98
Cbc0030I Thread 0 used 26 times,  waiting to start 0.15121746, 120.82097 cpu time, 148 locks, 0.060155392 locked, 4.4822693e-05 waiting for locks
Cbc0030I Main thread 122.67655 waiting for threads,  56 locks, 6.8426132e-05 locked, 5.9604645e-06 waiting for locks
Cbc0001I Search completed - best objective 48, took 8950 iterations and 26 nodes (195.12 seconds)
Cbc0032I Strong branching done 318 times (19874 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 7, 588 variables fixed on reduced cost
Total time (CPU seconds):       198.21   (Wallclock seconds):       202.30

