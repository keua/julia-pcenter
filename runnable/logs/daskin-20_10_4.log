
###############################################################
 General Information 
###############################################################

Formulation: DASKIN, loglevel: 1 , ratio: 0, 
timeout: 7200.0, threads: 1 

Problem parameters: 
 n = 20 
 p = 10 

Instance values: 
20×20 Named Array{Int64,2}
A ╲ B │   1    2    3    4    5    6    7  …   14   15   16   17   18   19   20
──────┼────────────────────────────────────────────────────────────────────────
1     │   0   96   28   84   73    2   23  …   50   51    9   80   91   73   85
2     │  67    0   26   62   76   49   30      23    6   44   75   41   99    1
3     │  56   22    0   25   33   59   22      59   87    1   51   45   83   40
4     │  83   29   93    0   86    3   76       7   10   58   97   75   87   55
5     │  94   22   56   58    0   49   40      64   24   70   67   83    5   44
6     │  14   27   18   95   52    0   94      83   14   84   10   52   89   11
7     │  21    6   59   25   21   80    0      51   59    4   28   17    4   26
8     │   7   64   97   65   47   10   10       7   39   12   33   51   64   17
9     │  11   73   18    9   98   30   65      52   90   48    6    4   97   25
⋮         ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮  ⋱    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮
12    │  87  100    6   80    5   37   43      13   30   74   11   25   42   38
13    │   3   81   97    6   91   47   99      70    4    5   30   26   54   73
14    │  49   33   30   30   94   16   25       0   15    0    9   72   39   83
15    │  34  100    3   78   72   35    7      20    0    7   74   47   95   22
16    │  26   45   40    6   83   14   29      40   10    0   41   52   15   12
17    │  41   90    3    9   61   14   73      71  100   88    0   75   35    7
18    │  13   42   38   24   90   72   11      53   37   98   75    0    8   62
19    │  98   38   23   67  100   70   60      54   53   39   94   57    0   64
20    │  71   18   76   43   93   33   17  …   25    5   87   40   39   66    0
Cgl0004I processed model has 441 rows, 421 columns (420 integer (420 of which binary)) and 1617 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 62 integers unsatisfied sum - 18.4269
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9 iterations 65
Cbc0038I Solution found of 9
Cbc0038I Relaxing continuous gives 9
Cbc0038I Before mini branch and bound, 355 integers at bound fixed and 0 continuous
Cbc0038I Full problem 441 rows 421 columns, reduced to 76 rows 54 columns
Cbc0038I Mini branch and bound improved solution from 9 to 4 (0.03 seconds)
Cbc0038I Round again with cutoff of 2.84868
Cbc0038I Reduced cost fixing fixed 175 variables on major pass 2
Cbc0038I Pass   2: suminf.    5.50526 (16) obj. 2.84868 iterations 11
Cbc0038I Pass   3: suminf.    4.76254 (18) obj. 2.84868 iterations 10
Cbc0038I Pass   4: suminf.    5.56986 (17) obj. 2.84868 iterations 4
Cbc0038I Pass   5: suminf.    6.43483 (37) obj. 2.84868 iterations 26
Cbc0038I Pass   6: suminf.    4.76254 (18) obj. 2.84868 iterations 25
Cbc0038I Pass   7: suminf.    7.60786 (46) obj. 2.84868 iterations 32
Cbc0038I Pass   8: suminf.    4.48953 (22) obj. 2.84868 iterations 23
Cbc0038I Pass   9: suminf.    4.48953 (22) obj. 2.84868 iterations 0
Cbc0038I Pass  10: suminf.    6.20482 (19) obj. 2.84868 iterations 12
Cbc0038I Pass  11: suminf.    5.61714 (18) obj. 2.84868 iterations 2
Cbc0038I Pass  12: suminf.    5.56986 (17) obj. 2.84868 iterations 8
Cbc0038I Pass  13: suminf.    4.76254 (18) obj. 2.84868 iterations 8
Cbc0038I Pass  14: suminf.    5.56986 (17) obj. 2.84868 iterations 4
Cbc0038I Pass  15: suminf.    8.50105 (48) obj. 2.84868 iterations 34
Cbc0038I Pass  16: suminf.    5.52405 (16) obj. 2.84868 iterations 25
Cbc0038I Pass  17: suminf.    8.74609 (37) obj. 2.84868 iterations 46
Cbc0038I Pass  18: suminf.    5.62307 (20) obj. 2.84868 iterations 34
Cbc0038I Pass  19: suminf.    5.62307 (20) obj. 2.84868 iterations 0
Cbc0038I Pass  20: suminf.    7.36270 (22) obj. 2.84868 iterations 16
Cbc0038I Pass  21: suminf.    4.76254 (18) obj. 2.84868 iterations 7
Cbc0038I Pass  22: suminf.    4.76254 (18) obj. 2.84868 iterations 0
Cbc0038I Pass  23: suminf.    5.56986 (17) obj. 2.84868 iterations 4
Cbc0038I Pass  24: suminf.   13.26072 (66) obj. 2.84868 iterations 52
Cbc0038I Pass  25: suminf.    8.06519 (31) obj. 2.84868 iterations 33
Cbc0038I Pass  26: suminf.    8.06519 (31) obj. 2.84868 iterations 1
Cbc0038I Pass  27: suminf.    7.85022 (27) obj. 2.84868 iterations 19
Cbc0038I Pass  28: suminf.    6.15132 (21) obj. 2.84868 iterations 10
Cbc0038I Pass  29: suminf.    5.06519 (21) obj. 2.84868 iterations 4
Cbc0038I Pass  30: suminf.    6.37132 (22) obj. 2.84868 iterations 4
Cbc0038I Pass  31: suminf.    5.48360 (21) obj. 2.84868 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 300 integers at bound fixed and 0 continuous
Cbc0038I Full problem 441 rows 421 columns, reduced to 140 rows 120 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of 4 - took 0.05 seconds
Cbc0012I Integer solution of 4 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 441 rows 421 columns, reduced to 70 rows 48 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 1.4858692 to 16 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 136 row cuts average 5.0 elements, 12 column cuts (12 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 col
###############################################################
 Daskin 
###############################################################

X 
20×20 Named Array{Float64,2}
A ╲ B │   1    2    3    4    5    6    7  …   14   15   16   17   18   19   20
──────┼────────────────────────────────────────────────────────────────────────
1     │ 1.0  0.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  0.0  0.0
2     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  1.0
3     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  1.0  0.0  0.0  0.0  0.0
4     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
5     │ 0.0  0.0  0.0  0.0  1.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
6     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
7     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  1.0  0.0  0.0  0.0  0.0
8     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
9     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  1.0  0.0  0.0
⋮         ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮  ⋱    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮
12    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
13    │ 1.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
14    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  1.0  0.0  0.0  0.0  0.0
15    │ 0.0  0.0  1.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
16    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  1.0  0.0  0.0  0.0  0.0
17    │ 0.0  0.0  1.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
18    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  1.0  0.0  0.0
19    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  1.0  0.0
20    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  0.0  1.0

Y 
20-element Named Array{Float64,1}
A  │ 
───┼────
1  │ 1.0
2  │ 0.0
3  │ 1.0
4  │ 0.0
5  │ 1.0
6  │ 0.0
7  │ 0.0
8  │ 0.0
9  │ 0.0
⋮      ⋮
12 │ 1.0
13 │ 1.0
14 │ 0.0
15 │ 0.0
16 │ 1.0
17 │ 0.0
18 │ 1.0
19 │ 1.0
20 │ 1.0

Optimal !
Objective function value is 4.0
Selected nodes: 1, 3, 5, 11, 12, 13, 16, 18, 19

umn cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0030I Thread 0 used 0 times,  waiting to start 2.3841858e-07, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 7.6293945e-06 locked, 2.3841858e-06 waiting for locks
Cbc0001I Search completed - best objective 4, took 5 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 171 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

