
###############################################################
 General Information 
###############################################################

Formulation: ELLOUMI, loglevel: 1 , ratio: 0, 
timeout: 7200.0, threads: 1 

Problem parameters: 
 n = 20 
 p = 4 

Instance values: 
20×20 Named Array{Int64,2}
A ╲ B │   1    2    3    4    5    6    7  …   14   15   16   17   18   19   20
──────┼────────────────────────────────────────────────────────────────────────
1     │   0   40   29   81   76   24   51  …   74   38   60   49   73   47    3
2     │  78    0   29   27   35   44   81       7   69   47   40   62   35   24
3     │  20   43    0   34   93   85   59      94   62   20   55    5   81   77
4     │  90   90   60    0   66   55   97      39    4   84   95    5   58   75
5     │  46   20   98   90    0   63   89       2   31   76   38   96   40   70
6     │  36    5   92   97    0    0   53      24    7   37   13   54   11   44
7     │  87   23   47   13   25    2    0      97   37   38   92   72   62   64
8     │  72   14   67   13   41   94   49      90   19    7   66   65    9   42
9     │  99   28   13   81   82   35   20      83   34    8   27   82   20  100
⋮         ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮  ⋱    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮
12    │  32   82   85   41   84   77   43      57   27   28   30    9   69   94
13    │  52   52   38    1   42   26   22      36   80   14    0   71   35   96
14    │   4   14  100   44   44   68   59       0   25   61   38   46   71   52
15    │  19   40   53   58   62   36    5      22    0   50   57   91    6   81
16    │  22   51   11   84   20   87   30      12   30    0   43   50   64   58
17    │  58   45   80   41   60   10   10      62   59   79    0   87   17   92
18    │  16    1   40   32   22   32   39      57   15   31   23    0   15   27
19    │  64   20   32   64   76   32   25      37   51   52   64   25    0   24
20    │  24   23   31   39   82   60   53  …   59   71   96   64   31   53    0

D = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]
k = 101
Cgl0003I 8 fixed, 0 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 946 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 477 strengthened rows, 0 substitutions
Cgl0004I processed model has 1740 rows, 112 columns (112 integer (112 of which binary)) and 22147 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 35 integers unsatisfied sum - 8.96154
Cbc0038I Pass   1: suminf.    5.66667 (18) obj. 18.6667 iterations 58
Cbc0038I Pass   2: suminf.    5.33333 (17) obj. 19 iterations 12
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. 23 iterations 62
Cbc0038I Solution found of 23
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1740 rows 112 columns, reduced to 586 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.34 seconds)
Cbc0038I Round again with cutoff of 21.4116
Cbc0038I Pass   4: suminf.    5.66667 (18) obj. 18.6667 iterations 0
Cbc0038I Pass   5: suminf.    5.33333 (17) obj. 19 iterations 8
Cbc0038I Pass   6: suminf.    2.91201 (21) obj. 21.4116 iterations 72
Cbc0038I Pass   7: suminf.    2.85907 (20) obj. 21.4116 iterations 22
Cbc0038I Pass   8: suminf.    4.06667 (15) obj. 21.0667 iterations 54
Cbc0038I Pass   9: suminf.    3.96774 (17) obj. 21.0323 iterations 12
Cbc0038I Pass  10: suminf.    4.87860 (29) obj. 21.4116 iterations 49
Cbc0038I Pass  11: suminf.    4.36292 (23) obj. 21.4116 iterations 15
Cbc0038I Pass  12: suminf.    8.00000 (24) obj. 17.4286 iterations 73
Cbc0038I Pass  13: suminf.    4.00000 (14) obj. 21 iterations 61
Cbc0038I Pass  14: suminf.    4.68172 (23) obj. 21.4116 iterations 43
Cbc0038I Pass  15: suminf.    7.17328 (31) obj. 21.4116 iterations 48
Cbc0038I Pass  16: suminf.    6.25504 (23) obj. 21.4116 iterations 30
Cbc0038I Pass  17: suminf.    6.25504 (23) obj. 21.4116 iterations 13
Cbc0038I Pass  18: suminf.    8.73123 (27) obj. 21.4116 iterations 43
Cbc0038I Pass  19: suminf.    4.53109 (20) obj. 21.4116 iterations 38
Cbc0038I Pass  20: suminf.    3.92170 (12) obj. 21.4116 iterations 24
Cbc0038I Pass  21: suminf.    5.58837 (12) obj. 21.4116 iterations 60
Cbc0038I Pass  22: suminf.    5.25000 (14) obj. 21.25 iterations 29
Cbc0038I Pass  23: suminf.    3.25238 (28) obj. 21.4116 iterations 34
Cbc0038I Pass  24: suminf.    2.97820 (27) obj. 21.4116 iterations 30
Cbc0038I Pass  25: suminf.    6.87097 (29) obj. 17.9785 iterations 49
Cbc0038I Pass  26: suminf.    5.90000 (19) obj. 18.7 iterations 14
Cbc0038I Pass  27: suminf.    5.33333 (17) obj. 19 iterations 8
Cbc0038I Pass  28: suminf.    5.33333 (17) obj. 19 iterations 7
Cbc0038I Pass  29: suminf.    3.85747 (26) obj. 21.4116 iterations 82
Cbc0038I Pass  30: suminf.    2.97820 (27) obj. 21.4116 iterations 33
Cbc0038I Pass  31: suminf.    7.00000 (20) obj. 18.5 iterations 59
Cbc0038I Pass  32: suminf.    4.66667 (16) obj. 21 iterations 33
Cbc0038I Pass  33: suminf.    3.66667 (11) obj. 21 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1740 rows 112 columns, reduced to 668 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (1.32 seconds)
Cbc0038I After 1.32 seconds - Feasibility pump exiting with objective of 23 - took 1.11 seconds
Cbc0012I Integer solution of 23 found by feasibility pump after 0 iterations and 0 nodes (1.32 seconds)
Cbc0038I Full problem 1740 rows 112 columns, reduced to 572 rows 35 columns

###############################################################
 Elloumi 
###############################################################

Y 
20-element Named Array{Float64,1}
A  │ 
───┼────
1  │ 0.0
2  │ 1.0
3  │ 0.0
4  │ 0.0
5  │ 0.0
6  │ 0.0
7  │ 1.0
8  │ 0.0
9  │ 0.0
⋮      ⋮
12 │ 1.0
13 │ 0.0
14 │ 0.0
15 │ 0.0
16 │ 0.0
17 │ 0.0
18 │ 0.0
19 │ 0.0
20 │ 0.0

uk: 1 dimensions:
[  2] = 1.0
[  3] = 1.0
[  4] = 1.0
[  5] = 1.0
[  6] = 1.0
[  7] = 1.0
[  8] = 1.0
[  9] = 1.0
[ 10] = 1.0
[ 11] = 1.0
[ 12] = 1.0
[ 13] = 1.0
[ 14] = 1.0
[ 15] = 1.0
[ 16] = 1.0
[ 17] = 1.0
[ 18] = 1.0
[ 19] = 1.0
[ 20] = 1.0
[ 21] = 1.0
[ 22] = 1.0
[ 23] = 1.0
[ 24] = 1.0
[ 25] = 0.0
[ 26] = 0.0
[ 27] = 0.0
[ 28] = 0.0
[ 29] = 0.0
[ 30] = 0.0
[ 31] = 0.0
[ 32] = 0.0
[ 33] = 0.0
[ 34] = 0.0
[ 35] = 0.0
[ 36] = 0.0
[ 37] = 0.0
[ 38] = 0.0
[ 39] = 0.0
[ 40] = 0.0
[ 41] = 0.0
[ 42] = 0.0
[ 43] = 0.0
[ 44] = 0.0
[ 45] = 0.0
[ 46] = 0.0
[ 47] = 0.0
[ 48] = 0.0
[ 49] = 0.0
[ 50] = 0.0
[ 51] = 0.0
[ 52] = 0.0
[ 53] = 0.0
[ 54] = 0.0
[ 55] = 0.0
[ 56] = 0.0
[ 57] = 0.0
[ 58] = 0.0
[ 59] = 0.0
[ 60] = 0.0
[ 61] = 0.0
[ 62] = 0.0
[ 63] = 0.0
[ 64] = 0.0
[ 65] = 0.0
[ 66] = 0.0
[ 67] = 0.0
[ 68] = 0.0
[ 69] = 0.0
[ 70] = 0.0
[ 71] = 0.0
[ 72] = 0.0
[ 73] = 0.0
[ 74] = 0.0
[ 75] = 0.0
[ 76] = 0.0
[ 77] = 0.0
[ 78] = 0.0
[ 79] = 0.0
[ 80] = 0.0
[ 81] = 0.0
[ 82] = 0.0
[ 83] = 0.0
[ 84] = 0.0
[ 85] = 0.0
[ 86] = 0.0
[ 87] = 0.0
[ 88] = 0.0
[ 89] = 0.0
[ 90] = 0.0
[ 91] = 0.0
[ 92] = 0.0
[ 93] = 0.0
[ 94] = 0.0
[ 95] = 0.0
[ 96] = 0.0
[ 97] = 0.0
[ 98] = 0.0
[ 99] = 0.0
[100] = 0.0
[101] = 0.0

Optimal !
Objective function value is 23.0
Selected nodes: 2, 7, 11, 12
Cbc0031I 15 added rows had average density of 43.333333
Cbc0013I At root node, 15 cuts changed objective from 16.115385 to 18.250827 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.302 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1301 row cuts average 48.2 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.666 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 141 row cuts average 40.8 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 23 best solution, best possible 19.5 (6.38 seconds)
Cbc0030I Thread 0 used 2 times,  waiting to start 4.7683716e-07, 0.530218 cpu time, 20 locks, 0.00052189827 locked, 9.7751617e-06 waiting for locks
Cbc0030I Main thread 0.54595733 waiting for threads,  8 locks, 1.4066696e-05 locked, 3.8146973e-06 waiting for locks
Cbc0001I Search completed - best objective 23, took 8057 iterations and 2 nodes (6.91 seconds)
Cbc0032I Strong branching done 142 times (9281 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       6.95   (Wallclock seconds):       7.00

