
###############################################################
 General Information 
###############################################################

Formulation: DASKIN, loglevel: 1 , ratio: 0, 
timeout: 7200.0, threads: 1 

Problem parameters: 
 n = 20 
 p = 10 

Instance values: 
20×20 Named Array{Int64,2}
A ╲ B │   1    2    3    4    5    6    7  …   14   15   16   17   18   19   20
──────┼────────────────────────────────────────────────────────────────────────
1     │   0   20   28   84   62   83   21  …   15   44   78   33   55    7   35
2     │  28    0   91   50    4   43   18      97   53   49   31   97   94   37
3     │  78   26    0   58   22   28   27      29   80    4   14   31   76   92
4     │  36   53   63    0   94   80    2      11   66   14   79   43   16   42
5     │  54   46   25   59    0   75   58      69   52   39  100    3   10   44
6     │  13   36   38   80   17    0   88      95   62   64   52   82   82   40
7     │  99   12   73   58   26   34    0      66   18   44   81   78   27   12
8     │  25   54   57   27   71   77   97      57   70   94   19   96   93   34
9     │  46   44   56   42   40    9   32      24   97   11   26    1   51   67
⋮         ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮  ⋱    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮
12    │  92   78   90   78   17   34   69      42   78   20   51   20   71   58
13    │  86   20   48    7   94   77   90      11  100   33   37   46   32   33
14    │  93    4   75   98   35   88   78       0   96   15   61   41   10   66
15    │  23    2   39   81   34   84   54      65    0   33   33   21   59   29
16    │  12   17   96   52   11   73   93      13   27    0   14   93   50   86
17    │  99   93   91   47   30   35    7      82   11   13    0   47   97  100
18    │  32   20   79    5   57   54   12      32   26   86   34    0   19   13
19    │  51   90  100   52   68   59   92      13  100   18   72   77    0   38
20    │   3   20   96   60   49   42   16  …   73   74   70   78   87   51    0
Cgl0004I processed model has 441 rows, 421 columns (420 integer (420 of which binary)) and 1619 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 69 integers unsatisfied sum - 17.9399
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 13 iterations 72
Cbc0038I Solution found of 13
Cbc0038I Relaxing continuous gives 13
Cbc0038I Before mini branch and bound, 351 integers at bound fixed and 0 continuous
Cbc0038I Full problem 441 rows 421 columns, reduced to 82 rows 60 columns
Cbc0038I Mini branch and bound improved solution from 13 to 7 (0.03 seconds)
Cbc0038I Round again with cutoff of 5.65218
Cbc0038I Reduced cost fixing fixed 90 variables on major pass 2
Cbc0038I Pass   2: suminf.    3.00000 (12) obj. 5.65218 iterations 16
Cbc0038I Pass   3: suminf.    3.21185 (12) obj. 5.65218 iterations 9
Cbc0038I Pass   4: suminf.    1.15527 (6) obj. 5.65218 iterations 10
Cbc0038I Pass   5: suminf.    3.00000 (12) obj. 5.65218 iterations 8
Cbc0038I Pass   6: suminf.    6.03068 (36) obj. 5.65218 iterations 51
Cbc0038I Pass   7: suminf.    1.15527 (6) obj. 5.65218 iterations 37
Cbc0038I Pass   8: suminf.    8.04958 (41) obj. 5.65218 iterations 45
Cbc0038I Pass   9: suminf.    4.15527 (16) obj. 5.65218 iterations 42
Cbc0038I Pass  10: suminf.    3.47205 (14) obj. 5.65218 iterations 14
Cbc0038I Pass  11: suminf.    3.00000 (12) obj. 5.65218 iterations 6
Cbc0038I Pass  12: suminf.    3.21185 (12) obj. 5.65218 iterations 15
Cbc0038I Pass  13: suminf.    1.15527 (6) obj. 5.65218 iterations 15
Cbc0038I Pass  14: suminf.    3.00000 (12) obj. 5.65218 iterations 14
Cbc0038I Pass  15: suminf.    8.16965 (45) obj. 5.65218 iterations 50
Cbc0038I Pass  16: suminf.    9.06165 (48) obj. 5.65218 iterations 51
Cbc0038I Pass  17: suminf.    3.70874 (13) obj. 5.65218 iterations 47
Cbc0038I Pass  18: suminf.    1.76087 (6) obj. 5.65218 iterations 8
Cbc0038I Pass  19: suminf.    2.96196 (9) obj. 5.65218 iterations 4
Cbc0038I Pass  20: suminf.    7.57421 (67) obj. 5.65218 iterations 85
Cbc0038I Pass  21: suminf.    3.00000 (13) obj. 5.65218 iterations 67
Cbc0038I Pass  22: suminf.    3.65734 (12) obj. 5.65218 iterations 12
Cbc0038I Pass  23: suminf.   11.25148 (52) obj. 5.65218 iterations 58
Cbc0038I Pass  24: suminf.    4.76087 (20) obj. 5.65218 iterations 52
Cbc0038I Pass  25: suminf.    4.76087 (20) obj. 5.65218 iterations 2
Cbc0038I Pass  26: suminf.    3.46167 (11) obj. 5.65218 iterations 16
Cbc0038I Pass  27: suminf.    1.76087 (6) obj. 5.65218 iterations 12
Cbc0038I Pass  28: suminf.    2.96196 (9) obj. 5.65218 iterations 6
Cbc0038I Pass  29: suminf.    6.34425 (35) obj. 5.65218 iterations 50
Cbc0038I Pass  30: suminf.    1.15527 (6) obj. 5.65218 iterations 41
Cbc0038I Pass  31: suminf.    6.39189 (32) obj. 5.65218 iterations 50
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 441 rows 421 columns, reduced to 185 rows 164 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of 7 - took 0.09 seconds
Cbc0012I Integer solution of 7 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 441 rows 421 columns, reduced to 82 rows 60 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 2.5208947 to 14 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 306 row cuts average 5.8 elements, 9 column cuts (9 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 col
###############################################################
 Daskin 
###############################################################

X 
20×20 Named Array{Float64,2}
A ╲ B │   1    2    3    4    5    6    7  …   14   15   16   17   18   19   20
──────┼────────────────────────────────────────────────────────────────────────
1     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  1.0  0.0
2     │ 0.0  1.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
3     │ 0.0  0.0  1.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
4     │ 0.0  0.0  0.0  0.0  0.0  0.0  1.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
5     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  1.0  0.0  0.0
6     │ 0.0  0.0  0.0  0.0  0.0  1.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
7     │ 0.0  0.0  0.0  0.0  0.0  0.0  1.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
8     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
9     │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  1.0  0.0  0.0
⋮         ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮  ⋱    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮
12    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
13    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
14    │ 0.0  1.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
15    │ 0.0  1.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
16    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
17    │ 0.0  0.0  0.0  0.0  0.0  0.0  1.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0
18    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  1.0  0.0  0.0
19    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  1.0  0.0
20    │ 0.0  0.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  0.0  1.0

Y 
20-element Named Array{Float64,1}
A  │ 
───┼────
1  │ 0.0
2  │ 1.0
3  │ 1.0
4  │ 0.0
5  │ 1.0
6  │ 1.0
7  │ 1.0
8  │ 1.0
9  │ 0.0
⋮      ⋮
12 │ 1.0
13 │ 0.0
14 │ 0.0
15 │ 0.0
16 │ 0.0
17 │ 0.0
18 │ 1.0
19 │ 1.0
20 │ 1.0

Optimal !
Objective function value is 7.0
Selected nodes: 2, 3, 5, 6, 7, 8, 12, 18, 19, 20

umn cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0030I Thread 0 used 0 times,  waiting to start 0, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 7.6293945e-06 locked, 2.6226044e-06 waiting for locks
Cbc0001I Search completed - best objective 7, took 3 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 77 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.13

