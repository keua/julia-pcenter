
###############################################################
 General Information 
###############################################################

Formulation: ELLOUMI, loglevel: 1 , ratio: 0, 
timeout: 7200.0, threads: 1 

Problem parameters: 
 n = 20 
 p = 2 

Instance values: 
20×20 Named Array{Int64,2}
A ╲ B │   1    2    3    4    5    6    7  …   14   15   16   17   18   19   20
──────┼────────────────────────────────────────────────────────────────────────
1     │   0   64   16   61   60   80   66  …   43   94    2   84   62   39   26
2     │  22    0    6   74   35   87   75      57    1   85   28   75    0   75
3     │  38   89    0   88   96   58   35      41   34   21   98    5   97   88
4     │  92   74   64    0   40  100    4      19   27   95   78   70   43   66
5     │  79   59   18    7    0   41   37      66   73   82   62   14  100   76
6     │  36   99    4    5   25    0   25      16   78   62    9   70   21   85
7     │  74   72   45   49   54   66    0      59   86   72    3   72   23   34
8     │  51    4   17   36   52   59    4      27   90   22   87   81   77   97
9     │  49   26   68   35   15   75   58      90   42   99   18   53   22   15
⋮         ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮  ⋱    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮
12    │  75   98   14   42   47   44   67      68   34    2   59   94    5   54
13    │  18   38    5   19   71   14    7      31   64   64   48   17   55   99
14    │  41   60   25   54   36    3   71       0   30    3   77   82   22   78
15    │  38   75   91    7   45   69   64      12    0   89   34   36   42   35
16    │  19    2   97   14   82   75   68      67   33    0    4    1    0   77
17    │  95   64   92   14   28   88    0      60   54    5    0   57   24   16
18    │  86   82   42   53   85   23   29      35   21   23   33    0   12   53
19    │  63    8    2   90   97    1   88      84   12   97   51   44    0   64
20    │  53   27   24   44   66   50    0  …   93   86   68   40    0   97    0

D = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]
k = 99
Cgl0003I 7 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 1764 rows, 111 columns (111 integer (111 of which binary)) and 21532 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 47 integers unsatisfied sum - 12
Cbc0038I Pass   1: suminf.    8.33333 (28) obj. 29.3333 iterations 63
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 43 iterations 148
Cbc0038I Solution found of 43
Cbc0038I Rounding solution of 42 is better than previous of 43

Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1764 rows 111 columns, reduced to 780 rows 47 columns
Cbc0038I Mini branch and bound improved solution from 42 to 39 (0.26 seconds)
Cbc0038I Round again with cutoff of 36.8626
Cbc0038I Pass   3: suminf.    8.33333 (28) obj. 29.3333 iterations 0
Cbc0038I Pass   4: suminf.    3.12500 (19) obj. 36.125 iterations 33
Cbc0038I Pass   5: suminf.    3.12500 (19) obj. 36.125 iterations 5
Cbc0038I Pass   6: suminf.    5.45320 (23) obj. 36.8626 iterations 47
Cbc0038I Pass   7: suminf.    5.13741 (20) obj. 36.8626 iterations 19
Cbc0038I Pass   8: suminf.    5.13741 (20) obj. 36.8626 iterations 4
Cbc0038I Pass   9: suminf.    5.37551 (22) obj. 36.8626 iterations 17
Cbc0038I Pass  10: suminf.    7.36259 (28) obj. 36.8626 iterations 45
Cbc0038I Pass  11: suminf.    6.30408 (23) obj. 36.8626 iterations 31
Cbc0038I Pass  12: suminf.    7.47074 (23) obj. 36.8626 iterations 68
Cbc0038I Pass  13: suminf.    5.85170 (25) obj. 36.8626 iterations 96
Cbc0038I Pass  14: suminf.    5.97074 (23) obj. 36.8626 iterations 42
Cbc0038I Pass  15: suminf.    5.46259 (20) obj. 36.8626 iterations 18
Cbc0038I Pass  16: suminf.    5.30408 (20) obj. 36.8626 iterations 11
Cbc0038I Pass  17: suminf.    5.30408 (20) obj. 36.8626 iterations 3
Cbc0038I Pass  18: suminf.    7.47074 (23) obj. 36.8626 iterations 45
Cbc0038I Pass  19: suminf.    5.85170 (25) obj. 36.8626 iterations 50
Cbc0038I Pass  20: suminf.    7.45816 (29) obj. 36.8626 iterations 43
Cbc0038I Pass  21: suminf.    5.93741 (22) obj. 36.8626 iterations 23
Cbc0038I Pass  22: suminf.    5.80408 (18) obj. 36.8626 iterations 79
Cbc0038I Pass  23: suminf.    5.80408 (18) obj. 36.8626 iterations 27
Cbc0038I Pass  24: suminf.    6.47074 (27) obj. 36.8626 iterations 58
Cbc0038I Pass  25: suminf.    5.86259 (21) obj. 36.8626 iterations 18
Cbc0038I Pass  26: suminf.    5.73741 (21) obj. 36.8626 iterations 13
Cbc0038I Pass  27: suminf.    7.63741 (22) obj. 36.8626 iterations 48
Cbc0038I Pass  28: suminf.    5.80408 (21) obj. 36.8626 iterations 39
Cbc0038I Pass  29: suminf.    7.13741 (25) obj. 36.8626 iterations 61
Cbc0038I Pass  30: suminf.    5.85170 (25) obj. 36.8626 iterations 64
Cbc0038I Pass  31: suminf.    6.08333 (23) obj. 36.0833 iterations 25
Cbc0038I Pass  32: suminf.    5.30408 (20) obj. 36.8626 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1764 rows 111 columns, reduced to 891 rows 54 columns - 32 fixed gives 63, 22 - ok now
Cbc0038I Full problem 1764 rows 111 columns, reduced to 24 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.50 seconds)
Cbc0038I After 0.50 seconds - Feasibility pump exiting with objective of 39 - took 0.39 seconds
Cbc0012I Integer solution of 39 found by feasibility pump after 0 iterations and 0 nodes (0.50 seconds)
Cbc0038I Full problem 1764 rows 111 columns, reduced to 780 rows 47 columns

###############################################################
 Elloumi 
###############################################################

Y 
20-element Named Array{Float64,1}
A  │ 
───┼────
1  │ 0.0
2  │ 0.0
3  │ 0.0
4  │ 0.0
5  │ 0.0
6  │ 0.0
7  │ 0.0
8  │ 0.0
9  │ 0.0
⋮      ⋮
12 │ 0.0
13 │ 1.0
14 │ 0.0
15 │ 0.0
16 │ 0.0
17 │ 0.0
18 │ 0.0
19 │ 1.0
20 │ 0.0

uk: 1 dimensions:
[ 2] = 1.0
[ 3] = 1.0
[ 4] = 1.0
[ 5] = 1.0
[ 6] = 1.0
[ 7] = 1.0
[ 8] = 1.0
[ 9] = 1.0
[10] = 1.0
[11] = 1.0
[12] = 1.0
[13] = 1.0
[14] = 1.0
[15] = 1.0
[16] = 1.0
[17] = 1.0
[18] = 1.0
[19] = 1.0
[20] = 1.0
[21] = 1.0
[22] = 1.0
[23] = 1.0
[24] = 1.0
[25] = 1.0
[26] = 1.0
[27] = 1.0
[28] = 1.0
[29] = 1.0
[30] = 1.0
[31] = 1.0
[32] = 1.0
[33] = 1.0
[34] = 1.0
[35] = 1.0
[36] = 1.0
[37] = 1.0
[38] = 1.0
[39] = 1.0
[40] = 0.0
[41] = 0.0
[42] = 0.0
[43] = 0.0
[44] = 0.0
[45] = 0.0
[46] = 0.0
[47] = 0.0
[48] = 0.0
[49] = 0.0
[50] = 0.0
[51] = 0.0
[52] = 0.0
[53] = 0.0
[54] = 0.0
[55] = 0.0
[56] = 0.0
[57] = 0.0
[58] = 0.0
[59] = 0.0
[60] = 0.0
[61] = 0.0
[62] = 0.0
[63] = 0.0
[64] = 0.0
[65] = 0.0
[66] = 0.0
[67] = 0.0
[68] = 0.0
[69] = 0.0
[70] = 0.0
[71] = 0.0
[72] = 0.0
[73] = 0.0
[74] = 0.0
[75] = 0.0
[76] = 0.0
[77] = 0.0
[78] = 0.0
[79] = 0.0
[80] = 0.0
[81] = 0.0
[82] = 0.0
[83] = 0.0
[84] = 0.0
[85] = 0.0
[86] = 0.0
[87] = 0.0
[88] = 0.0
[89] = 0.0
[90] = 0.0
[91] = 0.0
[92] = 0.0
[93] = 0.0
[94] = 0.0
[95] = 0.0
[96] = 0.0
[97] = 0.0
[98] = 0.0
[99] = 0.0

Optimal !
Objective function value is 39.0
Selected nodes: 13, 19
Cbc0031I 18 added rows had average density of 56.111111
Cbc0013I At root node, 18 cuts changed objective from 26.625 to 30.558481 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (3 active)  in 0.232 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2227 row cuts average 69.7 elements, 0 column cuts (0 active)  in 0.289 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.641 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 111 row cuts average 51.7 elements, 0 column cuts (0 active)  in 0.233 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 39 best solution, best possible 30.736842 (6.74 seconds)
Cbc0030I Thread 0 used 8 times,  waiting to start 9.5367432e-07, 2.783137 cpu time, 58 locks, 0.0013332367 locked, 1.9788742e-05 waiting for locks
Cbc0030I Main thread 2.8197927 waiting for threads,  20 locks, 2.7418137e-05 locked, 5.4836273e-06 waiting for locks
Cbc0001I Search completed - best objective 39, took 12285 iterations and 8 nodes (9.53 seconds)
Cbc0032I Strong branching done 324 times (20829 iterations), fathomed 1 nodes and fixed 20 variables
Cbc0035I Maximum depth 3, 3 variables fixed on reduced cost
Total time (CPU seconds):       9.57   (Wallclock seconds):       9.65

