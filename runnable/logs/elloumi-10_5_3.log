
###############################################################
 General Information 
###############################################################

Formulation: ELLOUMI, loglevel: 1 , ratio: 0, 
timeout: 7200.0, threads: 1 

Problem parameters: 
 n = 10 
 p = 5 

Instance values: 
10×10 Named Array{Int64,2}
A ╲ B │  1   2   3   4   5   6   7   8   9  10
──────┼───────────────────────────────────────
1     │  0  16  88   3  48   9  21  84  54  44
2     │ 21   0  41  48  20  56  50   0  73  70
3     │ 15  45   0  65  69  59  81  25  15  82
4     │ 20  46  37   0  44  22  18   4  86  32
5     │  0  46   8  51   0  35  99  18  10  13
6     │ 65   0  33  31  10   0  41  67  61  40
7     │ 62   1  57  95  15  16   0   3   9  34
8     │  5  74  93  96  17  60  88   0  82  10
9     │ 16  89  70  76  67  94  37  46   0  93
10    │ 12  48  91  94  26  26  89  71  14   0

D = [0, 1, 3, 4, 5, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 25, 26, 31, 32, 33, 34, 35, 37, 40, 41, 44, 45, 46, 48, 50, 51, 54, 56, 57, 59, 60, 61, 62, 65, 67, 69, 70, 71, 73, 74, 76, 81, 82, 84, 86, 88, 89, 91, 93, 94, 95, 96, 99]
k = 61
Cgl0003I 3 fixed, 0 tightened bounds, 368 strengthened rows, 0 substitutions
Cgl0004I processed model has 513 rows, 67 columns (67 integer (67 of which binary)) and 3718 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.6
Cbc0038I Pass   1: suminf.    3.25000 (13) obj. 7 iterations 11
Cbc0038I Pass   2: suminf.    2.50000 (5) obj. 15 iterations 27
Cbc0038I Solution found of 16
Cbc0038I Rounding solution of 12 is better than previous of 16

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 513 rows 67 columns, reduced to 134 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 12 to 10 (0.07 seconds)
Cbc0038I Round again with cutoff of 8.74009
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.25000 (13) obj. 7 iterations 0
Cbc0038I Pass   4: suminf.    5.13510 (13) obj. 8.74009 iterations 9
Cbc0038I Pass   5: suminf.    3.75991 (8) obj. 8.74009 iterations 16
Cbc0038I Pass   6: suminf.    3.43502 (13) obj. 8.74009 iterations 10
Cbc0038I Pass   7: suminf.    3.25000 (13) obj. 8 iterations 6
Cbc0038I Pass   8: suminf.    5.13510 (13) obj. 8.74009 iterations 11
Cbc0038I Pass   9: suminf.    3.25000 (13) obj. 7 iterations 8
Cbc0038I Pass  10: suminf.    5.13510 (13) obj. 8.74009 iterations 13
Cbc0038I Pass  11: suminf.    3.25991 (10) obj. 8.74009 iterations 12
Cbc0038I Pass  12: suminf.    2.75000 (11) obj. 8.5 iterations 9
Cbc0038I Pass  13: suminf.    3.45991 (16) obj. 8.74009 iterations 11
Cbc0038I Pass  14: suminf.    3.45991 (16) obj. 8.74009 iterations 2
Cbc0038I Pass  15: suminf.    5.74009 (17) obj. 8.74009 iterations 20
Cbc0038I Pass  16: suminf.    3.33333 (10) obj. 7.33333 iterations 10
Cbc0038I Pass  17: suminf.    2.51982 (6) obj. 8.74009 iterations 7
Cbc0038I Pass  18: suminf.    1.95986 (11) obj. 8.74009 iterations 6
Cbc0038I Pass  19: suminf.    4.12995 (9) obj. 8.74009 iterations 16
Cbc0038I Pass  20: suminf.    3.25991 (11) obj. 8.74009 iterations 6
Cbc0038I Pass  21: suminf.    3.12995 (7) obj. 8.74009 iterations 5
Cbc0038I Pass  22: suminf.    3.12995 (7) obj. 8.74009 iterations 2
Cbc0038I Pass  23: suminf.    0.90968 (7) obj. 8.74009 iterations 16
Cbc0038I Pass  24: suminf.    0.59408 (12) obj. 8.74009 iterations 3
Cbc0038I Pass  25: suminf.    3.33333 (10) obj. 7.66667 iterations 9
Cbc0038I Pass  26: suminf.    2.62995 (9) obj. 8.74009 iterations 6
Cbc0038I Pass  27: suminf.    3.66740 (9) obj. 8.74009 iterations 16
Cbc0038I Pass  28: suminf.    0.68226 (13) obj. 8.74009 iterations 18
Cbc0038I Pass  29: suminf.    0.59408 (12) obj. 8.74009 iterations 4
Cbc0038I Pass  30: suminf.    3.12995 (10) obj. 8.74009 iterations 12
Cbc0038I Pass  31: suminf.    2.62995 (9) obj. 8.74009 iterations 6
Cbc0038I Pass  32: suminf.    2.62995 (9) obj. 8.74009 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 513 rows 67 columns, reduced to 145 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 10 to 9 (0.42 seconds)
Cbc0038I Round again with cutoff of 7.68008
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.25000 (13) obj. 7 iterations 0
Cbc0038I Pass  33: suminf.    3.98675 (13) obj. 7.68008 iterations 9
Cbc0038I Pass  34: suminf.    3.91992 (17) obj. 7.68008 iterations 20
Cbc0038I Pass  35: suminf.    3.06992 (13) obj. 7.68008 iterations 8
Cbc0038I Pass  36: suminf.    3.06992 (13) obj. 7.68008 iterations 0
Cbc0038I Pass  37: suminf.    3.98675 (13) obj. 7.68008 iterations 5
Cbc0038I Pass  38: suminf.    3.25000 (13) obj. 7 iterations 11
Cbc0038I Pass  39: suminf.    3.56992 (14) obj. 7.68008 iterations 8
Cbc0038I Pass  40: suminf.    3.56992 (14) obj. 7.68008 iterations 5
Cbc0038I Pass  41: suminf.    3.88008 (18) obj. 7.68008 iterations 6
Cbc0038I Pass  42: suminf.    3.43662 (17) obj. 7.68008 iterations 2
Cbc0038I Pass  43: suminf.    5.43383 (18) obj. 7.68008 itera
###############################################################
 Elloumi 
###############################################################

Y 
10-element Named Array{Float64,1}
A  │ 
───┼────
1  │ 0.0
2  │ 0.0
3  │ 1.0
4  │ 0.0
5  │ 0.0
6  │ 1.0
7  │ 0.0
8  │ 1.0
9  │ 1.0
10 │ 1.0

uk: 1 dimensions:
[ 2] = 1.0
[ 3] = 1.0
[ 4] = 1.0
[ 5] = 1.0
[ 6] = 1.0
[ 7] = 1.0
[ 8] = 0.0
[ 9] = 0.0
[10] = 0.0
[11] = 0.0
[12] = 0.0
[13] = 0.0
[14] = 0.0
[15] = 0.0
[16] = 0.0
[17] = 0.0
[18] = 0.0
[19] = 0.0
[20] = 0.0
[21] = 0.0
[22] = 0.0
[23] = 0.0
[24] = 0.0
[25] = 0.0
[26] = 0.0
[27] = 0.0
[28] = 0.0
[29] = 0.0
[30] = 0.0
[31] = 0.0
[32] = 0.0
[33] = 0.0
[34] = 0.0
[35] = 0.0
[36] = 0.0
[37] = 0.0
[38] = 0.0
[39] = 0.0
[40] = 0.0
[41] = 0.0
[42] = 0.0
[43] = 0.0
[44] = 0.0
[45] = 0.0
[46] = 0.0
[47] = 0.0
[48] = 0.0
[49] = 0.0
[50] = 0.0
[51] = 0.0
[52] = 0.0
[53] = 0.0
[54] = 0.0
[55] = 0.0
[56] = 0.0
[57] = 0.0
[58] = 0.0
[59] = 0.0
[60] = 0.0
[61] = 0.0

Optimal !
Objective function value is 9.0
Selected nodes: 3, 6, 8, 9, 10
tions 17
Cbc0038I Pass  44: suminf.    3.33333 (10) obj. 7.33333 iterations 13
Cbc0038I Pass  45: suminf.    3.21775 (10) obj. 7.68008 iterations 4
Cbc0038I Pass  46: suminf.    4.38003 (12) obj. 7.68008 iterations 18
Cbc0038I Pass  47: suminf.    3.01696 (12) obj. 7.68008 iterations 4
Cbc0038I Pass  48: suminf.    3.01696 (12) obj. 7.68008 iterations 1
Cbc0038I Pass  49: suminf.    3.34004 (10) obj. 7.68008 iterations 16
Cbc0038I Pass  50: suminf.    3.31992 (10) obj. 7.68008 iterations 9
Cbc0038I Pass  51: suminf.    4.38003 (12) obj. 7.68008 iterations 8
Cbc0038I Pass  52: suminf.    3.01696 (12) obj. 7.68008 iterations 7
Cbc0038I Pass  53: suminf.    3.01696 (12) obj. 7.68008 iterations 3
Cbc0038I Pass  54: suminf.    3.33333 (10) obj. 7.66667 iterations 10
Cbc0038I Pass  55: suminf.    3.31992 (10) obj. 7.68008 iterations 5
Cbc0038I Pass  56: suminf.    4.38003 (12) obj. 7.68008 iterations 13
Cbc0038I Pass  57: suminf.    3.01696 (12) obj. 7.68008 iterations 8
Cbc0038I Pass  58: suminf.    3.01696 (12) obj. 7.68008 iterations 2
Cbc0038I Pass  59: suminf.    3.66667 (11) obj. 7 iterations 10
Cbc0038I Pass  60: suminf.    3.21775 (10) obj. 7.68008 iterations 7
Cbc0038I Pass  61: suminf.    4.38003 (12) obj. 7.68008 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 513 rows 67 columns, reduced to 161 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.98 seconds)
Cbc0038I After 0.98 seconds - Feasibility pump exiting with objective of 9 - took 0.95 seconds
Cbc0012I Integer solution of 9 found by feasibility pump after 0 iterations and 0 nodes (0.98 seconds)
Cbc0038I Full problem 513 rows 67 columns, reduced to 141 rows 18 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 6.4 to 9 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0030I Thread 0 used 0 times,  waiting to start 2.3841858e-07, 0 cpu time, 0 locks, 0 locked, 0 waiting for locks
Cbc0030I Main thread 0 waiting for threads,  1 locks, 8.1062317e-06 locked, 3.0994415e-06 waiting for locks
Cbc0001I Search completed - best objective 9, took 0 iterations and 0 nodes (0.99 seconds)
Cbc0035I Maximum depth 0, 24 variables fixed on reduced cost
Total time (CPU seconds):       1.00   (Wallclock seconds):       1.01

