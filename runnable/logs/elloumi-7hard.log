
###############################################################
 General Information 
###############################################################

Formulation: ELLOUMI, loglevel: 1 , ratio: 0, 
timeout: 7200.0, threads: 1 

Problem parameters: 
 n = 200 
 p = 10 

Instance values: 
200×200 Named Array{Int64,2}
A ╲ B │   1    2    3    4    5    6    7  …  194  195  196  197  198  199  200
──────┼────────────────────────────────────────────────────────────────────────
1     │   0   86   90   93   51   55   62  …   54   72  103   75   78   73   78
2     │  86    0   74   90   97  120   84     122   98  124  143  113   82  120
3     │  90   74    0   16   73   81   90      96   76   76  117   98   79  117
4     │  93   90   16    0   57   65   74      96   60   92  117   90   77  115
5     │  51   97   73   57    0   66   41      53   52   66   74   37   24   62
6     │  55  120   81   65   66    0   43      62   82   91   83   91   78  116
7     │  62   84   90   74   41   43    0      66   62  100   87   71   58   96
8     │ 100   78  103  112   91  108   70     104   79  120  122  106   89  127
9     │  75   53  102   87   66   83   45      79   54   95   97   91   64  102
⋮         ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮  ⋱    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮    ⋮
192   │  78   43   54   70   62   85   70      89   63   89  110   70   47   85
193   │ 109   95  106  115   62   86   48      97   94  110  118   77   68  106
194   │  54  122   96   96   53   62   66       0   36   64   21   54   59   97
195   │  72   98   76   60   52   82   62      36    0   41   57   55   58   96
196   │ 103  124   76   92   66   91  100      64   41    0   43   85   44   82
197   │  75  143  117  117   74   83   87      21   57   43    0   54   80  118
198   │  78  113   98   90   37   91   71      54   55   85   54    0   43   81
199   │  73   82   79   77   24   78   58      59   58   44   80   43    0   38
200   │  78  120  117  115   62  116   96  …   97   96   82  118   81   38    0

D = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 172, 183, 184]
k = 171
Cgl0003I 0 fixed, 0 tightened bounds, 11545 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10019 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8779 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7811 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7063 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6433 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5827 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5215 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4648 strengthened rows, 0 substitutions
Cgl0004I processed model has 25564 rows, 370 columns (370 integer (370 of which binary)) and 2257347 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0038I Initial state - 121 integers unsatisfied sum - 19.2358
Cbc0038I Pass   1: (43.96 seconds) suminf.   10.71429 (41) obj. 60.7143 iterations 638
Cbc0038I Pass   2: (44.78 seconds) suminf.    8.92000 (41) obj. 61.28 iterations 154
Cbc0038I Pass   3: (45.44 seconds) suminf.    8.40000 (35) obj. 61.8 iterations 139
Cbc0038I Pass   4: (45.98 seconds) suminf.    8.23077 (29) obj. 62.0769 iterations 70
Cbc0038I Pass   5: (46.92 seconds) suminf.    5.71429 (18) obj. 66.5714 iterations 190
Cbc0038I Pass   6: (47.73 seconds) suminf.    5.20000 (21) obj. 66.4 iterations 155
Cbc0038I Pass   7: (49.00 seconds) suminf.    0.00000 (0) obj. 72 iterations 235
Cbc0038I Solution found of 72
Cbc0038I Rounding solution of 71 is better than previous of 72

Cbc0038I Before mini branch and bound, 238 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25564 rows 370 columns, reduced to 12802 rows 132 columns - 10 fixed gives 3849, 122 - ok now
Cbc0038I Full problem 25564 rows 370 columns, reduced to 3849 rows 122 columns
Cbc0038I Mini branch and bound improved solution from 71 to 66 (60.23 seconds)
Cbc0038I Round again with cutoff of 64.2296
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   8: (60.77 seconds) suminf.   10.71429 (41) obj. 60.7143 iterations 0
Cbc0038I Pass   9: (61.62 seconds) suminf.    8.92000 (41) obj. 61.28 iterations 179
Cbc0038I Pass  10: (62.30 seconds) suminf.    8.40000 (35) obj. 61.8 iterations 145
Cbc0038I Pass  11: (62.86 seconds) suminf.    8.23077 (29) obj. 62.0769 iterations 75
Cbc0038I Pass  12: (63.68 seconds) suminf.    6.69312 (28) obj. 64.2296 iterations 142
Cbc0038I Pass  13: (64.21 seconds) suminf.    6.60579 (42) obj. 64.2296 iterations 85
Cbc0038I Pass  14: (66.46 seconds) suminf.    8.64968 (34) obj. 64.2296 iterations 521
Cbc0038I Pass  15: (67.77 seconds) suminf.    5.03165 (32) obj. 64.2296 iterations 290
Cbc0038I Pass  16: (69.68 seconds) suminf.    4.33333 (13) obj. 64 iterations 130
Cbc0038I Pass  17: (70.53 seconds) suminf.    0.22964 (1) obj. 64.2296 iterations 175
Cbc0038I Solution found of 64
Cbc0038I Before mini branch and bound, 227 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25564 rows 370 columns, reduced to 13229 rows 143 columns - 29 fixed gives 915, 113 - ok now
Cbc0038I Full problem 25564 rows 370 columns, reduced to 644 rows 98 columns
Cbc0038I Mini branch and bound did not improve solution (80.12 seconds)
Cbc0038I Round again with cutoff of 61.8592
Cbc0038I Reduced cost fixing fixed 12 variables on major pass 3
Cbc0038I Pass  18: (80.67 seconds) suminf.   10.71429 (41) obj. 60.7143 iterations 0
Cbc0038I Pass  19: (81.46 seconds) suminf.    8.92000 (41) obj. 61.28 iterations 157
Cbc0038I Pass  20: (82.10 seconds) suminf.    8.40000 (35) obj. 61.8 iterations 127
Cbc0038I Pass  21: (82.72 seconds) suminf.    8.28521 (34) obj. 61.8592 iterations 110
Cbc0038I Pass  22: (84.42 seconds) suminf.   11.47191 (31) obj. 61.8592 iterations 369
Cbc0038I Pass  23: (85.47 seconds) suminf.    8.31399 (51) obj. 61.485 iterations 251
Cbc0038I Pass  24: (88.32 seconds) suminf.   11.21924 (62) obj. 61.8592 iterations 676
Cbc0038I Pass  25: (90.28 seconds) suminf.    8.07041 (32) obj. 61.8592 iterations 402
Cbc0038I Pass  26: (91.82 seconds) suminf.    7.79437 (28) obj. 61.8592 iterations 321
Cbc0038I Pass  27: (93.22 seconds) suminf.    7.50000 (28) obj. 61.5 iterations 276
Cbc0038I Pass  28: (93.74 seconds) suminf.    7.50000 (29) obj. 61.5 iterations 83
Cbc0038I Pass  29: (95.83 seconds) suminf.   12.92978 (79) obj. 61.8592 iterations 454
Cbc0038I Pass  30: (97.15 seconds) suminf.    8.31630 (32) obj. 61.8592 iterations 283
Cbc0038I Pass  31: (97.88 seconds) suminf.    7.31150 (65) obj. 61.8592 iterations 145
Cbc0038I Pass  32: (98.91 seconds) suminf.    9.21400 (41) obj. 61.8592 iterations 265
Cbc0038I Pass  33: (99.43 seconds) suminf.    8.53277 (47) obj. 61.8592 iterations 80
Cbc0038I Pass  34: (99.92 seconds) suminf.    8.27766 (43) obj. 61.8592 iterations 54
Cbc0038I Pass  35: (100.38 seconds) suminf.    8.03011 (40) obj. 61.8592 iterations 53
Cbc0038I Pass  36: (102.02 seconds) suminf.    7.62737 (46) obj. 61.8592 iterations 353
Cbc0038I Pass  37: (102.86 seconds) suminf.    7.20585 (64) obj. 61.8592 iterations 165
Cbc0038I Pass  38: (104.02 seconds) suminf.   11.02971 (31) obj. 61.8592 iterations 297
Cbc0038I Pass  39: (104.75 seconds) suminf.    8.85511 (39) obj. 61.8592 iterations 149
Cbc0038I Pass  40: (105.25 seconds) suminf.    8.76055 (38) obj. 61.8592 iterations 66
Cbc0038I Pass  41: (106.63 seconds) suminf.   10.35917 (34) obj. 61.8592 iterations 300
Cbc0038I Pass  42: (107.50 seconds) suminf.    9.04516 (40) obj. 61.8592 iterations 216
Cbc0038I Pass  43: (108.04 seconds) suminf.    8.89851 (48) obj. 61.8592 iterations 81
Cbc0038I Pass  44: (110.51 seconds) suminf.    9.19650 (33) obj. 61.8592 iterations 554
Cbc0038I Pass  45: (111.42 seconds) suminf.    8.14032 (56) obj. 61.8592 iterations 211
Cbc0038I Pass  46: (111.99 seconds) suminf.    7.98793 (68) obj. 61.8592 iterations 67
Cbc0038I Pass  47: (115.27 seconds) suminf.   14.04375 (85) obj. 61.8592 iterations 754
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 206 integers at bound fixed and 0 continuous
Cbc0038I Full problem 25564 rows 370 columns, reduced to 14122 rows 164 columns - 29 fixed gives 967, 134 - ok now
Cbc0038I Full problem 25564 rows 370 columns, reduced to 680 rows 115 columns
Cbc0038I Mini branch and bound did not improve solution (125.99 seconds)
Cbc0038I After 126.00 seconds - Feasibility pump exiting with objective of 64 - took 85.92 seconds
Cbc0012I Integer solution of 64 found by feasibility pump after 0 iterations and 0 nodes (126.07 seconds)
Cbc0038I Full problem 25564 rows 370 columns, reduced to 12317 rows 122 columns
Cbc0031I 8 added rows had average density of 238.375
Cbc0013I At root node, 8 cuts changed objective from 57.295474 to 57.846586 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 24 column cuts (24 active)  in 1.412 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 2.226 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 8.175 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.147 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 676 row cuts average 236.7 elements, 0 column cuts (0 active)  in 3.779 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 64 best solution, best possible 57.846586 (320.09 seconds)

###############################################################
 Elloumi 
###############################################################

Y 
200-element Named Array{Float64,1}
A   │ 
────┼────
1   │ 0.0
2   │ 1.0
3   │ 0.0
4   │ 0.0
5   │ 0.0
6   │ 0.0
7   │ 0.0
8   │ 0.0
9   │ 0.0
⋮       ⋮
192 │ 0.0
193 │ 0.0
194 │ 0.0
195 │ 0.0
196 │ 0.0
197 │ 0.0
198 │ 0.0
199 │ 0.0
200 │ 0.0

uk: 1 dimensions:
[  2] = 1.0
[  3] = 1.0
[  4] = 1.0
[  5] = 1.0
[  6] = 1.0
[  7] = 1.0
[  8] = 1.0
[  9] = 1.0
[ 10] = 1.0
[ 11] = 1.0
[ 12] = 1.0
[ 13] = 1.0
[ 14] = 1.0
[ 15] = 1.0
[ 16] = 1.0
[ 17] = 1.0
[ 18] = 1.0
[ 19] = 1.0
[ 20] = 1.0
[ 21] = 1.0
[ 22] = 1.0
[ 23] = 1.0
[ 24] = 1.0
[ 25] = 1.0
[ 26] = 1.0
[ 27] = 1.0
[ 28] = 1.0
[ 29] = 1.0
[ 30] = 1.0
[ 31] = 1.0
[ 32] = 1.0
[ 33] = 1.0
[ 34] = 1.0
[ 35] = 1.0
[ 36] = 1.0
[ 37] = 1.0
[ 38] = 1.0
[ 39] = 1.0
[ 40] = 1.0
[ 41] = 1.0
[ 42] = 1.0
[ 43] = 1.0
[ 44] = 1.0
[ 45] = 1.0
[ 46] = 1.0
[ 47] = 1.0
[ 48] = 1.0
[ 49] = 1.0
[ 50] = 1.0
[ 51] = 1.0
[ 52] = 1.0
[ 53] = 1.0
[ 54] = 1.0
[ 55] = 1.0
[ 56] = 1.0
[ 57] = 1.0
[ 58] = 1.0
[ 59] = 1.0
[ 60] = 1.0
[ 61] = 1.0
[ 62] = 1.0
[ 63] = 1.0
[ 64] = 1.0
[ 65] = 1.0
[ 66] = 0.0
[ 67] = 0.0
[ 68] = 0.0
[ 69] = 0.0
[ 70] = 0.0
[ 71] = 0.0
[ 72] = 0.0
[ 73] = 0.0
[ 74] = 0.0
[ 75] = 0.0
[ 76] = 0.0
[ 77] = 0.0
[ 78] = 0.0
[ 79] = 0.0
[ 80] = 0.0
[ 81] = 0.0
[ 82] = 0.0
[ 83] = 0.0
[ 84] = 0.0
[ 85] = 0.0
[ 86] = 0.0
[ 87] = 0.0
[ 88] = 0.0
[ 89] = 0.0
[ 90] = 0.0
[ 91] = 0.0
[ 92] = 0.0
[ 93] = 0.0
[ 94] = 0.0
[ 95] = 0.0
[ 96] = 0.0
[ 97] = 0.0
[ 98] = 0.0
[ 99] = 0.0
[100] = 0.0
[101] = 0.0
[102] = 0.0
[103] = 0.0
[104] = 0.0
[105] = 0.0
[106] = 0.0
[107] = 0.0
[108] = 0.0
[109] = 0.0
[110] = 0.0
[111] = 0.0
[112] = 0.0
[113] = 0.0
[114] = 0.0
[115] = 0.0
[116] = 0.0
[117] = 0.0
[118] = 0.0
[119] = 0.0
[120] = 0.0
[121] = 0.0
[122] = 0.0
[123] = 0.0
[124] = 0.0
[125] = 0.0
[126] = 0.0
[127] = 0.0
[128] = 0.0
[129] = 0.0
[130] = 0.0
[131] = 0.0
[132] = 0.0
[133] = 0.0
[134] = 0.0
[135] = 0.0
[136] = 0.0
[137] = 0.0
[138] = 0.0
[139] = 0.0
[140] = 0.0
[141] = 0.0
[142] = 0.0
[143] = 0.0
[144] = 0.0
[145] = 0.0
[146] = 0.0
[147] = 0.0
[148] = 0.0
[149] = 0.0
[150] = 0.0
[151] = 0.0
[152] = 0.0
[153] = 0.0
[154] = 0.0
[155] = 0.0
[156] = 0.0
[157] = 0.0
[158] = 0.0
[159] = 0.0
[160] = 0.0
[161] = 0.0
[162] = 0.0
[163] = 0.0
[164] = 0.0
[165] = 0.0
[166] = 0.0
[167] = 0.0
[168] = 0.0
[169] = 0.0
[170] = 0.0
[171] = 0.0

Optimal !
Objective function value is 64.0
Selected nodes: 2, 10, 77, 95, 105, 164, 176, 180, 183, 186
Cbc0030I Thread 0 used 310 times,  waiting to start 0.80069351, 2479.4458 cpu time, 1428 locks, 0.33398342 locked, 0.00039100647 waiting for locks
Cbc0030I Main thread 2507.1879 waiting for threads,  624 locks, 0.00068283081 locked, 3.1232834e-05 waiting for locks
Cbc0001I Search completed - best objective 64, took 152639 iterations and 310 nodes (2799.78 seconds)
Cbc0032I Strong branching done 2158 times (149855 iterations), fathomed 5 nodes and fixed 0 variables
Cbc0035I Maximum depth 23, 4524 variables fixed on reduced cost
Total time (CPU seconds):       2812.34   (Wallclock seconds):       2849.88

